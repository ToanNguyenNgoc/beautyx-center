{"version":3,"file":"static/js/757.1d78818a.chunk.js","mappings":"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","sources":["webpack://demo1/./src/app/pages/approves/module/style.module.scss?3410","app/pages/approves/module/approve-detail.tsx","app/pages/approves/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__+81jf\",\"header\":\"style_header__zM1cn\",\"header_title\":\"style_header_title__Na18B\",\"header_created\":\"style_header_created__inFcF\",\"body\":\"style_body__ygHJ1\",\"body_head_cnt\":\"style_body_head_cnt__ydNQZ\",\"body_org\":\"style_body_org__ks0kn\",\"body_org_img\":\"style_body_org_img__u-856\",\"body_org_detail\":\"style_body_org_detail__Tqs3N\",\"org_name\":\"style_org_name__QGV+j\",\"org_address\":\"style_org_address__vq-FB\",\"org_contact\":\"style_org_contact__YXKFR\",\"org_contact_title\":\"style_org_contact_title__KmmWm\",\"body_approve_detail\":\"style_body_approve_detail__mhwUg\",\"body_approve_section\":\"style_body_approve_section__qXLJ+\",\"body_approve_title\":\"style_body_approve_title__NxpbT\",\"body_approve_btn\":\"style_body_approve_btn__zzYaK\",\"approve_list\":\"style_approve_list__5HUQL\",\"approve_list_show\":\"style_approve_list_show__-MsYE\",\"approve_list_item\":\"style_approve_list_item__iAYlh\",\"body_log_cnt\":\"style_body_log_cnt__EcGgV\",\"body_log_left\":\"style_body_log_left__r8uJC\",\"body_log_right\":\"style_body_log_right__CoNIq\",\"approve_logs\":\"style_approve_logs__tYunn\",\"approve_logs_item\":\"style_approve_logs_item__gi-xC\",\"log_item\":\"style_log_item__hDeI5\",\"log_item_date\":\"style_log_item_date__roojc\",\"approve_bot\":\"style_approve_bot__4+1-J\"};","import React, { useRef, useState } from 'react'\nimport { Dialog } from '@mui/material'\nimport { IApprove } from 'app/interface'\nimport { approveApi } from 'app/api'\nimport style from './style.module.scss'\nimport { useSwr, useNoti, useGetParamUrl } from 'app/hooks'\nimport { API_ROUTE } from 'app/api/api-route'\nimport { paramApproves } from 'app/query-params'\nimport { onErrorImg } from 'app/util'\nimport dayjs from 'dayjs'\nimport {\n    ApproveTypeElement,\n    ApproveStatusElement,\n    APPROVE_STATUS\n} from 'app/util/fileType'\nimport { XButton, SnackAlert, TextArea } from 'components'\n\ninterface ApproveDetailProps {\n    open: boolean,\n    setOpen: (open: boolean) => void,\n    approve: IApprove\n}\n\nfunction ApproveDetail(props: ApproveDetailProps) {\n    const { open, setOpen, approve } = props;\n    const query = useGetParamUrl()\n    const [body, setBody] = useState<any>({\n        log: \"\",\n        status: approve.status\n    })\n    const { noti, firstLoad, resultLoad, onCloseNoti } = useNoti()\n    const [refetch, setRefetch] = useState(false)\n    useSwr(refetch && open, API_ROUTE.APPROVES, {\n        ...paramApproves,\n        \"page\": query?.page ?? 1\n    })\n    const handlePutApprove = async () => {\n        firstLoad()\n        try {\n            await approveApi.putApprove(approve.id, body)\n            setRefetch(true)\n            resultLoad(\"Đã lưu thay đổi\")\n        } catch (error) {\n            resultLoad(\"Có lỗi xảy ra\")\n        }\n    }\n    const onClose = () => {\n        setRefetch(false)\n        setOpen(false)\n    }\n    //UI\n    const refStatus = useRef<any>()\n    const onToggleListStatus = () => {\n        refStatus.current?.classList?.toggle(style.approve_list_show)\n    }\n    const onChangeStatus = (status: string) => setBody({ ...body, status: status })\n    const onChangeInput = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setBody({ ...body, log: e.target.value })\n    }\n    //disable button\n    let disable = false\n    if (approve.status === \"APPROVED\" || approve.status === \"REJECT\") disable = true\n\n    return (\n        <>\n            <Dialog\n                open={open}\n                onClose={onClose}\n            >\n                <SnackAlert\n                    title={noti.message}\n                    open={noti.openAlert}\n                    onClose={onCloseNoti}\n                />\n                <div className={style.container}>\n                    <div className={style.header}>\n                        <span className={style.header_title}>\n                            Chi tiết kiểm duyệt\n                        </span>\n                        <span className={style.header_created}>\n                            Ngày tạo:\n                            {dayjs(approve.created_at).format(\"HH:mm DD/MM/YYYY\")}\n                        </span>\n                    </div>\n                    {\n                        approve.organization &&\n                        <div className={style.body}>\n                            <div className={style.body_head_cnt}>\n                                <div className={style.body_org}>\n                                    <div className={style.body_org_img}>\n                                        <img\n                                            onError={(e) => onErrorImg(e)}\n                                            src={approve.organization.image_url} alt=\"\"\n                                        />\n                                    </div>\n                                    <div className={style.body_org_detail}>\n                                        <p title='Xem gian hàng' className={style.org_name}>\n                                            {approve.organization.name}\n                                        </p>\n                                        <p className={style.org_address}>\n                                            {approve.organization.full_address}\n                                        </p>\n                                        <div className={style.org_contact}>\n                                            <p className={style.org_contact_title}>\n                                                Thông tin liên lạc\n                                            </p>\n                                            <div className={style.org_contact_list}>\n                                                {approve.organization.telephone?.map(item => (\n                                                    <p key={item} className={style.org_contact_item}>{item}</p>\n                                                ))}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className={style.body_approve_detail}>\n                                    <div className={style.body_approve_section}>\n                                        <p className={style.body_approve_title}>\n                                            Kiểm duyệt cho\n                                        </p>\n                                        <ApproveTypeElement type={approve.type} />\n                                    </div>\n                                    <div className={style.body_approve_section}>\n                                        <p className={style.body_approve_title}>\n                                            Trạng thái\n                                        </p>\n                                        <ApproveStatusElement status={body.status} />\n                                        <button\n                                            style={disable ? {\n                                                cursor: \"not-allowed\"\n                                            } : {}}\n                                            disabled={disable}\n                                            onFocus={onToggleListStatus}\n                                            onBlur={onToggleListStatus}\n                                            className={style.body_approve_btn}\n                                        >\n                                            <i className=\"bi bi-pencil-fill fs-5\"></i>\n                                            <ul ref={refStatus} className={style.approve_list}>\n                                                {\n                                                    APPROVE_STATUS.map(item => (\n                                                        <li\n                                                            onClick={() => onChangeStatus(item.STATUS)}\n                                                            key={item.STATUS} className={style.approve_list_item}\n                                                        >\n                                                            <ApproveStatusElement status={item.STATUS} />\n                                                        </li>\n                                                    ))\n                                                }\n                                            </ul>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                    <div className={style.body_log_cnt}>\n                        <div className={style.body_log_left}>\n                            <span className={style.body_approve_title}>Ghi chú</span>\n                            <ul className={style.approve_logs}>\n                                {\n                                    approve.logs?.map(log => (\n                                        <li key={log.id} className={style.approve_logs_item}>\n                                            <div className={style.log_item}>\n                                                {log.note}\n                                            </div>\n                                            <span className={style.log_item_date}>\n                                                {dayjs(log.created_at).format(\"HH:mm DD/MM/YYYY\")}\n                                            </span>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </div>\n                        <div className={style.body_log_right}>\n                            <span className={style.body_approve_title}>Viết ghi chú</span>\n                            <TextArea\n                                onChange={onChangeInput}\n                                placeholder='Viết ghi chú...'\n                            />\n                        </div>\n                    </div>\n                    <div className={style.approve_bot}>\n                        <XButton\n                            onClick={handlePutApprove}\n                            title=\"Lưu thay đổi\"\n                            color=\"success\"\n                            loading={noti.load}\n                            disable={disable}\n                        />\n                    </div>\n                </div>\n            </Dialog>\n        </>\n    );\n}\n\nexport default ApproveDetail","import React, { useState } from 'react';\nimport TitlePage from 'components/TitlePage';\nimport { useGetParamUrl, useSwr } from 'app/hooks';\nimport { paramApproves } from 'app/query-params';\nimport { API_ROUTE } from 'app/api/api-route';\nimport { KTSVG } from '_metronic/helpers';\nimport { IApprove } from 'app/interface';\n// import { useVerifyRoute } from 'app/hooks';\nimport { ApproveStatusElement, ApproveTypeElement } from 'app/util'\nimport dayjs from 'dayjs'\nimport ApproveDetail from './module/approve-detail';\nimport { Avatar, XPagination } from 'components';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nfunction Approve() {\n    const location = useLocation()\n    const navigate = useNavigate()\n    const query: any = useGetParamUrl()\n    const { responseArray, totalItem, totalPage } = useSwr(true, API_ROUTE.APPROVES, {\n        ...paramApproves,\n        \"page\": query?.page ?? 1\n    })\n    const onChangePage = (page: number) => {\n        navigate({\n            pathname: location.pathname,\n            search: `page=${page}`\n        })\n    }\n    return (\n        <>\n            <TitlePage title='Kiểm duyệt' />\n            <div className={`card mb-5 mb-xl-8`}>\n                <div className='card-header border-0 pt-5'>\n                    <h3 className='card-title align-items-start flex-column'>\n                        <span className='card-label fw-bold fs-3 mb-1'>Danh sách kiểm duyệt</span>\n                        <span className='text-muted mt-1 fw-semobold fs-7'>\n                            {totalItem} kiểm duyệt\n                        </span>\n                    </h3>\n                    <div className='card-toolbar'>\n                        <button\n                            type='button'\n                            className='btn btn-sm btn-icon btn-color-primary btn-active-light-primary'\n                            data-kt-menu-trigger='click'\n                            data-kt-menu-placement='bottom-end'\n                            data-kt-menu-flip='top-end'\n                        >\n                            <KTSVG path='/media/icons/duotune/general/gen024.svg' className='svg-icon-2' />\n                        </button>\n                    </div>\n                </div>\n                <div className='card-body py-3'>\n                    <div className='table-responsive'>\n                        <table className='table align-middle gs-0 gy-4'>\n                            <thead>\n                                <tr className='fw-bold text-muted bg-light'>\n                                    <th className='ps-4 min-w-250px rounded-start'>Doanh nghiệp</th>\n                                    <th className='min-w-110px'>Duyệt cho</th>\n                                    <th className='min-w-110px'> Trạng thái </th>\n                                    <th className='min-w-150px'>Ghi chú</th>\n                                    <th className='min-w-140px'>Ngày tạo</th>\n                                    <th className='min-w-140px'>Cập nhật lúc</th>\n                                    <th className='min-w-100px text-end rounded-end'></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    responseArray?.map((item: IApprove, index: number) => (\n                                        <ApproveItem key={index} item={item} />\n                                    ))\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            <XPagination\n                totalPage={totalPage}\n                onChangePage={onChangePage}\n                defaultPage={query?.page ?? 1}\n            />\n        </>\n    );\n}\n\nexport default Approve;\n\nconst ApproveItem = ({ item }: { item: IApprove }) => {\n    const [open, setOpen] = useState(false)\n    return (\n        <>\n            <ApproveDetail\n                open={open} setOpen={setOpen}\n                approve={item}\n            />\n            <tr>\n                {\n                    item.organization &&\n                    <td>\n                        <div className='d-flex align-items-center'>\n                            <div className='symbol symbol-50px me-5'>\n                                <Avatar\n                                    src={item.organization.image_url}\n                                />\n                            </div>\n                            <div className='d-flex justify-content-start flex-column'>\n                                <span className='text-dark fw-bold text-hover-primary mb-1 fs-6'>\n                                    {item.organization.name}\n                                </span>\n                                <span className='text-muted fw-semobold text-muted d-block fs-7'>\n                                    {item.organization.address}\n                                </span>\n                            </div>\n                        </div>\n                    </td>\n                }\n                <td>\n                    <ApproveTypeElement type={item.type} />\n                </td>\n                <td>\n                    <ApproveStatusElement status={item.status} />\n                </td>\n                <td>\n                    {\n                        item.logs.length > 0 &&\n                        <span className='text-muted fw-semobold text-muted d-block fs-7 mt-1'>\n                            {item.logs[0]?.note}\n                        </span>\n                    }\n                </td>\n                <td>\n                    <span className='text-muted fw-semobold text-muted d-block fs-7 mt-1'>\n                        {dayjs(item.created_at).format(\"HH:mm - DD/MM/YYYY\")}\n                    </span>\n                </td>\n                <td>\n                    <span className='text-muted fw-semobold text-muted d-block fs-7 mt-1'>\n                        {dayjs(item.updated_at).format(\"HH:mm - DD/MM/YYYY\")}\n                    </span>\n                </td>\n                <td className='text-end'>\n                    <button\n                        onClick={() => setOpen(true)}\n                        // to={{ pathname: \"/\" }}\n                        className='btn btn-bg-light btn-color-muted btn-active-color-primary btn-sm px-4'\n                    >\n                        <i className=\"bi bi-pencil-fill fs-6\"></i>\n                    </button>\n                </td>\n            </tr>\n        </>\n    )\n}"],"names":["props","_query$page","_approve$organization","_approve$logs","open","setOpen","approve","query","useGetParamUrl","body","setBody","useState","log","status","noti","firstLoad","resultLoad","onCloseNoti","useNoti","refetch","setRefetch","useSwr","API_ROUTE","APPROVES","paramApproves","page","refStatus","useRef","onToggleListStatus","_refStatus$current","_refStatus$current$cl","current","classList","toggle","style","approve_list_show","disable","_jsx","_Fragment","children","_jsxs","Dialog","onClose","SnackAlert","title","message","openAlert","className","container","header","header_title","header_created","dayjs","created_at","format","organization","body_head_cnt","body_org","body_org_img","onError","e","onErrorImg","src","image_url","alt","body_org_detail","org_name","name","org_address","full_address","org_contact","org_contact_title","org_contact_list","telephone","map","item","org_contact_item","body_approve_detail","body_approve_section","body_approve_title","ApproveTypeElement","type","ApproveStatusElement","cursor","disabled","onFocus","onBlur","body_approve_btn","ref","approve_list","APPROVE_STATUS","onClick","onChangeStatus","STATUS","approve_list_item","body_log_cnt","body_log_left","approve_logs","logs","approve_logs_item","log_item","note","log_item_date","id","body_log_right","TextArea","onChange","target","value","placeholder","approve_bot","XButton","async","approveApi","putApprove","error","color","loading","load","_query$page2","location","useLocation","navigate","useNavigate","responseArray","totalItem","totalPage","TitlePage","KTSVG","path","index","ApproveItem","XPagination","onChangePage","pathname","search","defaultPage","_ref","_item$logs$","ApproveDetail","Avatar","address","length","updated_at"],"sourceRoot":""}