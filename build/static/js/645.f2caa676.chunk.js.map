{"version":3,"file":"static/js/645.f2caa676.chunk.js","mappings":"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","sources":["app/pages/discounts/module/discount-form/select-service.tsx","app/pages/trends/module/trend-form.tsx","components/TitlePage/index.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useRef, useState } from \"react\"\nimport \"./style.scss\"\nimport { Avatar, Chip, CircularProgress } from \"@mui/material\"\nimport { IOrganization, IService } from \"app/interface\"\nimport orgApi from \"app/api/orgApi\"\nimport { debounce } from \"lodash\"\nimport { formatPrice, onErrorImg } from \"app/util\"\n\ninterface SelectServiceProps {\n  orgsChoose?: IOrganization[],\n  values: IService[],\n  setValues?: (values: any) => void,\n  onChangeService?: (service: IService[]) => void\n}\n\nexport const SelectService = ({ orgsChoose = [], values = [], setValues, onChangeService }: SelectServiceProps) => {\n  const refBox = useRef<HTMLDivElement | null>(null)\n  const selected_id = values.map(i => i.id)\n  const [services, setServices] = useState<{ data: any[], load: boolean }>({ data: [], load: false })\n  const onTriggerBox = (type: 'show' | 'hide') => {\n    if (orgsChoose.length > 0) {\n      if (type === 'show') return refBox.current?.classList?.add('box-services-show')\n    }\n    if (type === 'hide') return refBox.current?.classList?.remove('box-services-show')\n  }\n  window.addEventListener('click', () => onTriggerBox('hide'))\n  //\n  const getServicesByOrgs = async (keyword: string, orgsChoose: any) => {\n    let servicesSearch = [];\n    for (var org of orgsChoose) {\n      const res = await orgApi.getServicesByOrg({\n        keyword: keyword,\n        org_id: org?.id,\n      })\n      const newValues = {\n        services: res?.data.context.data,\n        org: org\n      }\n      servicesSearch.push(newValues)\n    }\n    setServices({ data: servicesSearch, load: false })\n  }\n  const debounceDropDownServices = useCallback(\n    debounce((nextValue, orgsChoose) => {\n      setServices({ data: [], load: true })\n      getServicesByOrgs(nextValue, orgsChoose);\n    }, 1500),\n    []\n  );\n  const onChangeSearchServicesProducts = (e: any) => {\n    if (orgsChoose && orgsChoose.length > 0) {\n      debounceDropDownServices(e.target.value, orgsChoose)\n    }\n  }\n  const list = services.data?.map(i => i.services).flat() ?? []\n  const onSelect = (item: IService) => {\n    if (onChangeService) {\n      const iIndex = values.findIndex(i => i.id === item.id)\n      if (iIndex < 0) {\n        onChangeService([...values, item])\n      } else {\n        onChangeService(values.filter(i => i.id !== item.id))\n      }\n      return\n    }\n    if (setValues) {\n      setValues((prev: any) => {\n        const index = prev.findIndex((i: any) => i.id === item.id)\n        if (index < 0) {\n          prev = [...prev, item]\n          return prev\n        } else {\n          return prev.filter((i: any) => i.id !== item.id)\n        }\n      })\n      return\n    }\n  }\n  return (\n    <div className=\"select-services\">\n      <label className=\"required form-label\">Sản phẩm áp dụng</label>\n      <div onClick={(e) => { e.stopPropagation(); onTriggerBox('show') }} className=\"form-control form-control-solid ser-selected\">\n        {\n          values.map(item => (\n            <Chip\n              key={item.id}\n              label={`${item.service_name} | Giá gốc: ${formatPrice(item.price)}`}\n              onDelete={() => onSelect(item)}\n              size=\"medium\"\n              color=\"primary\"\n              avatar={<Avatar src={item.image_url} />}\n            />\n          ))\n        }\n      </div>\n      <div onClick={(e) => e.stopPropagation()} ref={refBox} className=\"box-services\">\n        <div className=\"box-service-input\">\n          {services.load && <CircularProgress size={16} />}\n          <input onChange={onChangeSearchServicesProducts} type=\"text\"\n            className=\"form-control form-control-solid\" placeholder=\"Tìm kiếm dịch vụ...\"\n          />\n        </div>\n        <div className=\"services-list\">\n          <ul>\n            {\n              list.filter(Boolean).map((item: IService, index: number) => (\n                <li key={index}>\n                  <div style={selected_id.includes(item.id) ? { backgroundColor: 'var(--kt-gray-200)' } : {}}\n                    onClick={() => onSelect(item)} className=\"service-item\"\n                  >\n                    <div className=\"image\">\n                      <img src={item.image_url} onError={(e) => onErrorImg(e)} alt=\"\" />\n                    </div>\n                    <div className=\"service-detail\">\n                      <p className=\"service-name\">{item.service_name}</p>\n                      <p className=\"service-price\">{formatPrice(item.price)}</p>\n                    </div>\n                  </div>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}","import TitlePage from 'components/TitlePage'\nimport { useFormik } from 'formik'\nimport { ChangeEvent, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useMessage, usePostMedia } from 'app/hooks'\nimport { accept_image, accept_video } from 'app/util'\nimport { IMGS } from '_metronic/assets/imgs/imgs'\nimport { CircularProgress } from '@mui/material'\nimport { useMutation, useQuery } from 'react-query'\nimport { request3rdApi } from 'app/api/api-3rd-client'\nimport { LoadingButton } from '@mui/lab'\nimport { IOrganization, IService } from 'app/interface'\nimport { AppSnack, SelectionOrg } from 'components'\nimport { SelectService } from 'app/pages/discounts/module/discount-form/select-service'\nimport './style.scss'\nimport { AxiosError } from 'axios'\n\n\nfunction TrendForm() {\n  const params: any = useParams()\n  const { resultLoad, noti, onCloseNoti } = useMessage()\n  const { handlePostMedia: handlePostThumb } = usePostMedia()\n  const [organization, setOrganization] = useState<IOrganization>()\n  const [services, setServices] = useState<IService[]>([])\n  const { handlePostMedia, isLoading } = usePostMedia()\n  const { mutate, isLoading: isLoadPost } = useMutation({\n    mutationFn: (body: any) => params.id ? request3rdApi.putTrend(params.id, body) : request3rdApi.postTrend(body),\n    onSuccess: () => params.id ? resultLoad({ message: 'Cập nhật thành công' }) : resultLoad({ message: 'Tạo mới thành công' }),\n    onError: (errors: any) => {\n      const err = errors as AxiosError\n      resultLoad({\n        color: 'error',\n        message: `Có lỗi xảy ra. Mã lỗi ${err?.request?.status}`\n      })\n    }\n  })\n  const formik = useFormik({\n    initialValues: {\n      media_url: '',\n      image_thumb: '',\n      title: '',\n      content: '',\n      trend_url: ''\n    },\n    onSubmit: (values) => {\n      mutate({\n        ...values,\n        organization_id: organization?.id,\n        services: services.map(i => i.id\n        )\n      })\n    }\n  })\n  const { refetch, isRefetching, data } = useQuery({\n    queryKey: ['TREND', params.id],\n    queryFn: () => request3rdApi.trend(params.id),\n    enabled: params.id ? true : false,\n    onSuccess: (data) => {\n      const trend = data.context\n      const ser: any = trend.services\n      setServices(ser)\n      formik.setFieldValue('media_url', trend.media_url)\n      formik.setFieldValue('image_thumb', trend.image_thumb)\n      formik.setFieldValue('title', trend.title)\n      formik.setFieldValue('content', trend.content)\n      formik.setFieldValue('trend_url', trend.trend_url)\n    }\n  })\n  const onChangeVideo = (e: ChangeEvent<HTMLInputElement>) => {\n    handlePostMedia({\n      e,\n      callBack: (data) => formik.setFieldValue('media_url', data[0]?.original_url),\n      version: 'api.beautyx',\n      resetOriginalResult:true\n    })\n  }\n  const onChangeThumb = (e: ChangeEvent<HTMLInputElement>) => {\n    handlePostThumb({\n      e,\n      callBack: (data) => formik.setFieldValue('image_thumb', data[0]?.original_url),\n      version: 'api.beautyx',\n      resetOriginalResult:true\n    })\n  }\n  return (\n    <>\n      <AppSnack\n        severity={noti.color}\n        message={noti.message}\n        open={noti.openAlert}\n        close={onCloseNoti}\n      />\n      <TitlePage title={params.id ? 'Thay đổi nội dung' : 'Thêm mới'} />\n      <div className=\"container\">\n        <form onSubmit={formik.handleSubmit} className=\"trend-form\">\n          <div className=\"video d-flex justify-content-between\">\n            <div className=\"video-left\">\n              <div className=\"required form-label\">Video</div>\n              <div className=\"drag-video\">\n                {\n                  isLoading &&\n                  <div className=\"drag-video-load\">\n                    Đang tải video lên...\n                    <CircularProgress />\n                  </div>\n                }\n                {\n                  formik.values.media_url === \"\" ?\n                    <img src={IMGS.imgPlaceHolder} alt=\"\" />\n                    :\n                    <video controls>\n                      <source src={formik.values.media_url} />\n                    </video>\n                }\n              </div>\n              <div className=\"input-video\">\n                <input onChange={onChangeVideo} hidden type=\"file\" accept={accept_video} id='video' />\n                <label htmlFor=\"video\" className='btn btn-primary btn-up-img'>\n                  <i className=\"bi bi-arrow-bar-up\"></i>\n                </label>\n                <input\n                  onChange={formik.handleChange} name='media_url' value={formik.values.media_url}\n                  type=\"text\" className='form-control form-control-solid mt-4'\n                  placeholder='Hoặc video url...' />\n              </div>\n            </div>\n            <div className=\"video-right\">\n              <div className=\"required form-label\">Image thumbnail</div>\n              <div className=\"drag-image\">\n                <img src={formik.values.image_thumb || IMGS.imgPlaceHolder} alt=\"\" />\n              </div>\n              <div className=\"input-img\">\n                <input onChange={onChangeThumb} hidden type=\"file\" accept={accept_image} id='up-img' />\n                <label htmlFor=\"up-img\" className='btn btn-primary btn-up-img'>\n                  <i className=\"bi bi-arrow-bar-up\"></i>\n                </label>\n                <input\n                  onChange={formik.handleChange} value={formik.values.image_thumb} name='image_thumb'\n                  type=\"text\" className='form-control form-control-solid mt-4'\n                  placeholder='Hoặc image url...'\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col mt-4\">\n            <div className=\"required form-label\">Tiêu đề</div>\n            <input\n              type=\"text\" onChange={formik.handleChange} value={formik.values.title} name=\"title\"\n              className=\"form-control form-control-solid\" placeholder='Tiêu đề'\n            />\n          </div>\n          <div className=\"col mt-4\">\n            <div className=\"required form-label\">Nội dung</div>\n            <input\n              type=\"text\" onChange={formik.handleChange} value={formik.values.content} name=\"content\"\n              className=\"form-control form-control-solid\" placeholder='Nội dung'\n            />\n          </div>\n          <div className=\"col mt-4\">\n            <div className=\"required form-label\">Link tiktok</div>\n            <input\n              type=\"text\" onChange={formik.handleChange} value={formik.values.trend_url} name=\"trend_url\"\n              className=\"form-control form-control-solid\" placeholder='Link tiktok'\n            />\n          </div>\n          <div className='mt-4'>\n            <SelectionOrg\n              organization_id={data?.context?.organization_id} origin={organization}\n              setOrigin={setOrganization}\n            />\n            <div className=\"mt-4\">\n              <SelectService\n                orgsChoose={organization ? [organization] : []}\n                values={services}\n                setValues={setServices}\n              />\n            </div>\n          </div>\n          <div className=\"d-flex justify-content-end mt-8\">\n            {\n              params.id &&\n              <LoadingButton style={{ marginRight: '8px' }} onClick={() => refetch()} loading={isRefetching} type='button'\n                variant='contained' color='primary' size='large' >\n                Khôi phục\n              </LoadingButton>\n            }\n            <LoadingButton loading={isLoadPost} type='submit' variant='contained' color='success' size='large' >\n              {!params.id ? 'Tạo mới' : 'Lưu thay đổi'}\n            </LoadingButton>\n          </div>\n        </form>\n      </div>\n    </>\n  )\n}\n\nexport default TrendForm","import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    title: string\n    element?: JSX.Element\n}\n\nfunction TitlePage(props: IProps) {\n    const { title, element } = props;\n    return (\n        <div className='toolbar' id='kt_toolbar'>\n            <div id=\"kt_toolbar_container\" className='container-fluid d-flex flex-stack'>\n                <h1 className='d-flex align-items-center text-dark fw-bolder my-1 fs-3'>\n                    {title}\n                </h1>\n                {element}\n            </div>\n        </div>\n    );\n}\n\nexport default TitlePage;"],"names":["SelectService","orgsChoose","values","setValues","onChangeService","refBox","useRef","selected_id","map","i","id","useState","data","load","services","setServices","onTriggerBox","type","length","current","classList","add","remove","window","addEventListener","getServicesByOrgs","keyword","servicesSearch","org","orgApi","org_id","res","newValues","context","push","debounceDropDownServices","useCallback","debounce","nextValue","list","flat","onSelect","item","iIndex","findIndex","filter","prev","className","onClick","e","stopPropagation","label","service_name","formatPrice","price","onDelete","size","color","avatar","src","image_url","ref","onChange","target","value","placeholder","Boolean","index","style","includes","backgroundColor","onError","onErrorImg","alt","params","useParams","useMessage","resultLoad","noti","onCloseNoti","handlePostThumb","usePostMedia","handlePostMedia","organization","setOrganization","isLoading","useMutation","mutationFn","body","request3rdApi","onSuccess","message","errors","request","status","mutate","isLoadPost","formik","useFormik","initialValues","media_url","image_thumb","title","content","trend_url","onSubmit","organization_id","useQuery","queryKey","queryFn","enabled","trend","ser","setFieldValue","refetch","isRefetching","severity","open","openAlert","close","TitlePage","handleSubmit","CircularProgress","IMGS","controls","callBack","original_url","version","resetOriginalResult","hidden","accept","accept_video","htmlFor","handleChange","name","accept_image","origin","setOrigin","LoadingButton","marginRight","loading","variant","props","element"],"sourceRoot":""}