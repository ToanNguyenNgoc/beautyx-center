{"version":3,"file":"static/js/772.6a89a77c.chunk.js","mappings":"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","sources":["app/pages/trends/index.tsx","components/TitlePage/index.tsx"],"sourcesContent":["import TitlePage from 'components/TitlePage'\nimport { AppSnack, PageCircularProgress, XPagination } from 'components'\nimport React from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useFetch, useGetParamUrl, useMessage } from 'app/hooks'\nimport { API_3RD } from 'app/api/api-route'\nimport dayjs from 'dayjs'\nimport { toAbsoluteUrl } from '_metronic/helpers'\nimport { ITrend } from './trend.interface'\nimport request3rdApi from 'app/api/api-3rd-client/request'\nimport { Button, CircularProgress } from '@mui/material'\nimport { useMutation } from 'react-query'\n\nfunction Trend() {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const query: any = useGetParamUrl()\n  const { totalPage, response, isValidating } = useFetch(true, `${API_3RD.TRENDS}?page=${query?.page ?? 1}&include=services`)\n  const onChangePage = (page: number) => {\n    navigate({\n      pathname: location.pathname,\n      search: `page=${page}`\n    })\n  }\n  return (\n    <>\n      <TitlePage\n        title='Trends'\n        element={\n          <Button\n            size='large' color='success' variant='contained'\n            onClick={() => navigate('/pages/trend-form')}\n          >\n            Tạo mới\n          </Button>\n        }\n      />\n      <div className={`card mb-5 mb-xl-8`}>\n        <div className='card-header border-0 pt-5'>\n          <h3 className='card-title align-items-start flex-column'>\n            <span className='card-label fw-bold fs-3 mb-1'>Bài đăng</span>\n            {/* <span className='text-muted mt-1 fw-semobold fs-7'>Over {totalItem}</span> */}\n          </h3>\n        </div>\n        <div className='card-body py-3'>\n          <div className='table-responsive'>\n            <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n              <thead>\n                <tr className='fw-bold text-muted'>\n                  <th className='min-w-100px'>Bài đăng</th>\n                  <th className='min-w-70px'>Thumbnail</th>\n                  <th className='min-w-140px'>Doanh nghiệp</th>\n                  <th className='min-w-140px'>Dịch vụ được gán</th>\n                  <th className='min-w-120px'>Ngày đăng</th>\n                  <th className='min-w-120px'>Ngày sửa</th>\n                  <th className='min-w-100px'>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {response?.data?.map((item: ITrend) => (\n                  <TrendRow key={item._id} item={item} />\n                ))}\n              </tbody>\n            </table>\n            <PageCircularProgress loading={isValidating} />\n          </div>\n        </div>\n      </div>\n      <XPagination\n        onChangePage={onChangePage}\n        totalPage={totalPage}\n        defaultPage={query?.page ?? 1}\n      />\n    </>\n  )\n}\n\nconst TrendRow = ({ item }: { item: ITrend }) => {\n  const navigate = useNavigate()\n  const { noti, resultLoad, onCloseNoti } = useMessage()\n  const handleDetail = (serviceDetail: ITrend) => {\n    navigate(`/pages/trend-form/${serviceDetail._id}`)\n  }\n  const { mutate, isLoading } = useMutation({\n    mutationFn: () => request3rdApi.refreshComment(item._id),\n    onSuccess: () => resultLoad({ color: 'success', message: 'Refresh trend success' }),\n    onError: () => resultLoad({ color: 'error', message: 'Refresh trend fail' })\n  })\n  return (\n    <>\n      <tr key={item._id}>\n        <td>\n          <div className='d-flex align-items-center'>\n            <div className='symbol symbol-45px me-5'>\n              <img src={toAbsoluteUrl(item.organization_image)} alt='' />\n            </div>\n            <div className='d-flex justify-content-start flex-column'>\n              <span className='text-dark fw-bold fs-6'>{item.title}</span>\n            </div>\n          </div>\n        </td>\n        <td>\n          <div className='symbol symbol-75px me-5'>\n            <img style={{ objectFit: 'contain' }} src={toAbsoluteUrl(item.image_thumb)} alt='' />\n          </div>\n        </td>\n        <td>\n          <span className='text-dark fw-bold d-block fs-6'>\n            {item.organization_name}\n          </span>\n        </td>\n        <td>\n          {item.services?.map((service) => (\n            <p key={service.id} className='text-dark d-block fs-6'>\n              {service.service_name}\n            </p>\n          ))}\n        </td>\n        <td>\n          <span className='text-dark d-block fs-7'>\n            {dayjs(item.createdAt).format('DD/MM/YYYY')}\n          </span>\n        </td>\n        <td>\n          <span className='text-dark d-block fs-7'>\n            {dayjs(item.updatedAt).format('DD/MM/YYYY')}\n          </span>\n        </td>\n        <td>\n          <div className='d-flex justify-content-end flex-shrink-0'>\n            <button\n              onClick={() => handleDetail(item)}\n              style={{ marginRight: '6px' }}\n              className='btn btn-bg-light btn-color-muted btn-active-color-primary btn-sm px-4'\n            >\n              <i className='bi bi-pencil-fill fs-6'></i>\n            </button>\n            <button\n              onClick={() => mutate()}\n              className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'\n            >\n              {isLoading ? <CircularProgress size={12} /> : <i className=\"bi bi-arrow-clockwise\"></i>}\n            </button>\n          </div>\n        </td>\n      </tr>\n      <AppSnack\n        severity={noti.color}\n        message={noti.message}\n        open={noti.openAlert}\n        close={onCloseNoti}\n      />\n    </>\n  )\n}\n\nexport default Trend\n","import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    title: string\n    element?: JSX.Element\n}\n\nfunction TitlePage(props: IProps) {\n    const { title, element } = props;\n    return (\n        <div className='toolbar' id='kt_toolbar'>\n            <div id=\"kt_toolbar_container\" className='container-fluid d-flex flex-stack'>\n                <h1 className='d-flex align-items-center text-dark fw-bolder my-1 fs-3'>\n                    {title}\n                </h1>\n                {element}\n            </div>\n        </div>\n    );\n}\n\nexport default TitlePage;"],"names":["TrendRow","item","navigate","useNavigate","useMessage","noti","resultLoad","onCloseNoti","useMutation","mutationFn","request3rdApi","_id","onSuccess","color","message","onError","mutate","isLoading","className","src","toAbsoluteUrl","organization_image","alt","title","style","objectFit","image_thumb","organization_name","services","map","service","service_name","id","dayjs","createdAt","format","updatedAt","onClick","marginRight","size","severity","open","openAlert","close","location","useLocation","query","useGetParamUrl","useFetch","API_3RD","page","totalPage","response","isValidating","element","variant","data","loading","onChangePage","pathname","search","defaultPage","props"],"sourceRoot":""}