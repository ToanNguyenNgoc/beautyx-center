{"version":3,"file":"static/js/594.f2b65bb2.chunk.js","mappings":"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","sources":["app/pages/customers/index.tsx","components/TitlePage/index.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { Avatar, FormControl, MenuItem, Select, SelectChangeEvent } from \"@mui/material\";\nimport { KTSVG } from \"_metronic/helpers\";\nimport { statisticApi } from \"app/api\";\nimport { PLAT_FORM_ARR, formatDate, getRangeOfDates } from \"app/util\";\nimport { QR_CACHE, QR_KEY } from \"common\";\nimport { AppSnack, FlatFormOrder, PageCircularProgress, XDateRangePicker, XPagination } from \"components\";\nimport TitlePage from \"components/TitlePage\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport queryString from \"query-string\"\nimport { QrCustomer, ResponseList } from \"@types\";\nimport { FC, useEffect, useState } from \"react\";\nimport \"./style.scss\"\nimport { identity, pickBy } from \"lodash\";\nimport moment from \"moment\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Customer } from \"app/interface\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\"\nimport { useMessage } from \"app/hooks\";\n\nfunction Customers() {\n  const location = useLocation()\n  const navigate = useNavigate()\n  const query = queryString.parse(location.search) as QrCustomer\n  const { data, isLoading } = useQuery({\n    queryKey: [QR_KEY.CUSTOMER, query],\n    queryFn: () => statisticApi.customers({\n      'page': query['page'],\n      'limit': 15,\n      'platform': query['platform'],\n      'sort': query['sort'] || '-created_at',\n      'from_date': query['from_date'],\n      'to_date': query['to_date']\n    }),\n    staleTime: QR_CACHE\n  })\n  const customers = data?.data || []\n  const onChangePage = (page: number) => {\n    const newQuery = {\n      ...query,\n      page: page\n    }\n    navigate({\n      pathname: location.pathname,\n      search: queryString.stringify(newQuery)\n    })\n  }\n  return (\n    <>\n      <TitlePage title=\"Danh sách khách hàng\" />\n      <div className={`card`}>\n        <div className='card-header border-0 pt-5'>\n          <h3 className='card-title align-items-start flex-column'>\n            <span className='card-label fw-bold fs-3 mb-1'>Customer Statistics</span>\n            <span className='text-muted mt-1 fw-semobold fs-7'>Số lượng:{data?.total} members</span>\n          </h3>\n        </div>\n        <Filter query={query} />\n        <div className=\"d-flex justify-content-end px-12\">\n          {data && <ExportFile data={data} qr={query} />}\n        </div>\n        <div className='card-body py-3'>\n          <div className='table-responsive'>\n            <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n              <thead>\n                <tr className='fw-bold text-muted'>\n                  <th className='min-w-150px'>Thông tin khách hàng</th>\n                  <th className='min-w-140px'>Số điện thoại</th>\n                  <th className='min-w-140px'>Nền tảng</th>\n                  <th className='min-w-120px'>Ngày đăng ký</th>\n                  <th className='min-w-100px text-end'>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  customers.map(item => (\n                    <tr key={item.id}>\n                      <td>\n                        <div className='d-flex align-items-center'>\n                          <div className='symbol symbol-45px me-5'>\n                            <Avatar src={item.avatar || item.fullname} alt={item.fullname} />\n                          </div>\n                          <div className='d-flex justify-content-start flex-column'>\n                            <span className='text-dark fw-bold fs-6'>\n                              {item.fullname}\n                            </span>\n                            <span className='fw-semobold text-muted d-block fs-7'>\n                              {item.email}\n                            </span>\n                          </div>\n                        </div>\n                      </td>\n                      <td>\n                        <a href={`tel:${item.telephone}`} className='text-dark fw-bold text-hover-primary d-block fs-6'>\n                          {item.telephone}\n                        </a>\n                      </td>\n                      <td>\n                        <FlatFormOrder platForm={item.platform} />\n                      </td>\n                      <td>\n                        <span className='text-muted fw-semobold text-muted d-block fs-7'>\n                          {formatDate(item.created_at)}\n                        </span>\n                      </td>\n                      <td>\n                        <div className='d-flex justify-content-end flex-shrink-0'>\n                          <Link\n                            to={'#'}\n                            className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n                          >\n                            <KTSVG\n                              path='/media/icons/duotune/general/gen019.svg'\n                              className='svg-icon-3'\n                            />\n                          </Link>\n                        </div>\n                      </td>\n                    </tr>\n                  ))\n                }\n              </tbody>\n            </table>\n            <PageCircularProgress loading={isLoading} />\n            <XPagination\n              totalPage={data?.last_page ?? 1}\n              onChangePage={onChangePage}\n              defaultPage={query['page'] ?? 1}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Customers;\n\nconst Filter: FC<{ query: QrCustomer }> = ({ query }) => {\n  const location = useLocation()\n  const navigate = useNavigate()\n  const sorts = [\n    { sort: '-created_at', title: 'Ngày đăng ký mới' },\n    { sort: 'created_at', title: 'Ngày đăng ký cũ' }\n  ]\n  const [rangeDate, setRangeDate] = useState({ form: query['from_date'], to: query['to_date'] })\n  const onChangePlatform = (e: SelectChangeEvent) => {\n    const newQuery = {\n      ...query,\n      'page': 1,\n      'platform': e.target.value !== \"\" ? e.target.value : \"\"\n    }\n    navigate({\n      pathname: location.pathname,\n      search: queryString.stringify(pickBy(newQuery, identity))\n    })\n  }\n  const onChangeSort = (e: SelectChangeEvent) => {\n    const newQuery: QrCustomer = {\n      ...query,\n      'sort': e.target.value,\n      'page': 1\n    }\n    navigate({\n      pathname: location.pathname,\n      search: queryString.stringify(newQuery)\n    })\n  }\n  const onApplyRangeDate = () => {\n    const newQuery: QrCustomer = {\n      ...query,\n      'page': 1,\n      'from_date': rangeDate.form,\n      'to_date': rangeDate.to\n    }\n    navigate({\n      pathname: location.pathname,\n      search: queryString.stringify(newQuery)\n    })\n  }\n  const onCancelRangeDate = () => {\n    const newQuery: QrCustomer = {\n      ...query,\n      'page': 1,\n      'from_date': undefined,\n      'to_date': undefined\n    }\n    setRangeDate({ form: undefined, to: undefined })\n    navigate({\n      pathname: location.pathname,\n      search: queryString.stringify(pickBy(newQuery, identity))\n    })\n  }\n  return (\n    <div className=\"d-flex justify-content-between filter-cnt\">\n      <div>\n        <label className=\"filter-row_label\">Tìm kiếm</label>\n        <input\n          // type=\"text\" onChange={onInputChange}\n          className=\"form-control form-control-solid py-2 px-6\"\n          placeholder=\"Tìm kiếm\"\n        />\n      </div>\n      <div className=\"filter-right\">\n        <div className=\"filter-row\">\n          <div className=\"filter-row_platform\">\n            <label className=\"filter-row_label\">Nền tảng</label>\n            <FormControl sx={{ m: 1, minWidth: 150 }} size=\"small\">\n              <Select\n                labelId=\"demo-select-small-label\"\n                id=\"demo-select-small\"\n                value={query['platform'] ?? ''}\n                onChange={onChangePlatform}\n              >\n                <MenuItem value=\"\">\n                  <em>Tất cả</em>\n                </MenuItem>\n                {\n                  PLAT_FORM_ARR.map(item => (\n                    <MenuItem key={item} value={item}>{item}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n          </div>\n          <div className=\"filter-row_platform\">\n            <label className=\"filter-row_label\">Sắp xếp theo</label>\n            <FormControl sx={{ m: 1, minWidth: 150 }} size=\"small\">\n              <Select\n                labelId=\"demo-select-small-label\"\n                id=\"demo-select-small\"\n                value={query.sort ?? sorts[0].sort}\n                onChange={onChangeSort}\n              >\n                {\n                  sorts.map(item => (\n                    <MenuItem key={item.sort} value={item.sort}>{item.title}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"filter-row_picker\">\n          <XDateRangePicker\n            showBot\n            init={(!rangeDate.form || !rangeDate.to)}\n            startDate={rangeDate.form ? new Date(rangeDate.form) : new Date()}\n            endDate={rangeDate.to ? new Date(rangeDate.to) : new Date()}\n            label=\"Thời gian đăng ký\"\n            onChange={(e) => setRangeDate({\n              form: moment(e.selection.startDate).format('YYYY-MM-DD HH:mm:ss'),\n              to: moment(e.selection.endDate).format('YYYY-MM-DD HH:mm:ss')\n            })}\n            onApply={onApplyRangeDate}\n            onCancel={onCancelRangeDate}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface ExportFileProps {\n  data: ResponseList<Customer[]>;\n  qr: QrCustomer;\n}\n\nconst ExportFile: FC<ExportFileProps> = ({ data, qr }) => {\n  const [customers, setCustomers] = useState<Customer[]>([])\n  const { resultLoad, noti, onCloseNoti } = useMessage()\n  const [isExport, setIsExport] = useState(false)\n  const { mutate, isLoading } = useMutation({\n    mutationFn: (page: number) => statisticApi.customers({\n      ...qr, 'page': page, 'limit': 15\n    }),\n    onSuccess: (res) => setCustomers(prev => [...prev, ...res.data])\n  })\n  const onExport = () => {\n    if(data.data.length === 0) return\n    if (!qr['from_date'] || !qr['to_date'])\n      return resultLoad({ message: 'Vui lòng chọn khoảng thời gian', color: 'warning' })\n    const dateRange = getRangeOfDates(\n      qr['from_date'] ? new Date(qr['from_date']) : new Date(),\n      qr['to_date'] ? new Date(qr['to_date']) : new Date()\n    )\n    if (dateRange.length > 31)\n      return resultLoad({ message: 'Xuất danh sách tối đa trong 30 ngày', color: 'warning' })\n    setIsExport(true)\n    for (var i = 1; i <= data?.last_page; i++) {\n      mutate(i)\n    }\n  }\n  useEffect(() => {\n    if (isExport && customers.length > 0 && customers.length === data?.total) {\n      onExportFile(customers).then(() => {\n        resultLoad({ message: 'Xuất File thành công', color: 'success' })\n        setCustomers([])\n        setIsExport(false)\n      })\n    }\n    if (customers.length === data?.total) setCustomers([])\n  }, [customers, data?.total])\n  return (\n    <>\n      <AppSnack\n        severity={noti.color}\n        message={noti.message}\n        open={noti.openAlert}\n        close={onCloseNoti}\n      />\n      <LoadingButton\n        color=\"success\"\n        size=\"medium\"\n        variant=\"contained\"\n        onClick={onExport}\n        type=\"button\"\n        loading={isLoading}\n      >\n        <i style={{ marginRight: '4px', color: 'var(--kt-white)' }} className=\"bi bi-download\"></i>\n        Xuất danh sách\n      </LoadingButton>\n    </>\n  )\n}\nconst onExportFile = (customers: Customer[]) => {\n  return new Promise((resolve, reject) => {\n    const fileType =\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n    const titleRow = ['#', 'ID', 'Họ và tên', 'Email', 'Số điện thoại', 'Nền tảng', 'Ngày đăng ký']; // Replace with your actual titles\n    const dataWithTitles = [\n      titleRow,\n      ...customers.map((item, i) => [i + 1, item.id, item.fullname, item.email, item.telephone, item.platform, item.created_at])\n    ];\n    const ws = XLSX.utils.aoa_to_sheet(dataWithTitles);\n    const columnWidths = [\n      { wch: 5 },\n      { wch: 10 },\n      { wch: 35 },\n      { wch: 25 },\n      { wch: 25 },\n      { wch: 25 },\n      { wch: 25 },\n    ];\n    ws['!cols'] = columnWidths;\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, `ds_khach_hang_${moment().format('DDHHmmss')}` + fileExtension);\n    resolve(true)\n  })\n}","import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    title: string\n    element?: JSX.Element\n}\n\nfunction TitlePage(props: IProps) {\n    const { title, element } = props;\n    return (\n        <div className='toolbar' id='kt_toolbar'>\n            <div id=\"kt_toolbar_container\" className='container-fluid d-flex flex-stack'>\n                <h1 className='d-flex align-items-center text-dark fw-bolder my-1 fs-3'>\n                    {title}\n                </h1>\n                {element}\n            </div>\n        </div>\n    );\n}\n\nexport default TitlePage;"],"names":["location","useLocation","navigate","useNavigate","query","queryString","search","useQuery","queryKey","QR_KEY","queryFn","statisticApi","staleTime","QR_CACHE","data","isLoading","customers","TitlePage","title","className","total","Filter","ExportFile","qr","map","item","Avatar","src","avatar","fullname","alt","email","href","telephone","platForm","platform","formatDate","created_at","to","path","id","loading","totalPage","last_page","onChangePage","page","newQuery","pathname","defaultPage","sorts","sort","useState","form","rangeDate","setRangeDate","placeholder","FormControl","sx","m","minWidth","size","Select","labelId","value","onChange","e","target","pickBy","identity","MenuItem","PLAT_FORM_ARR","showBot","init","startDate","Date","endDate","label","moment","selection","format","onApply","onCancel","undefined","setCustomers","useMessage","resultLoad","noti","onCloseNoti","isExport","setIsExport","useMutation","mutationFn","onSuccess","res","prev","mutate","useEffect","length","onExportFile","then","message","color","severity","open","openAlert","close","LoadingButton","variant","onClick","getRangeOfDates","i","type","style","marginRight","Promise","resolve","reject","dataWithTitles","ws","XLSX","wch","wb","Sheets","SheetNames","excelBuffer","bookType","Blob","FileSaver","props","element"],"sourceRoot":""}