{"version":3,"file":"static/js/734.645776ee.chunk.js","mappings":"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","sources":["app/pages/trends/index.tsx","components/TitlePage/index.tsx"],"sourcesContent":["import TitlePage from 'components/TitlePage'\nimport { AppSnack, PageCircularProgress, XPagination } from 'components'\nimport React from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useFetch, useGetParamUrl, useMessage } from 'app/hooks'\nimport { API_3RD } from 'app/api/api-route'\nimport dayjs from 'dayjs'\nimport { toAbsoluteUrl } from '_metronic/helpers'\nimport { ITrend } from './trend.interface'\nimport request3rdApi from 'app/api/api-3rd-client/request'\nimport { Button, CircularProgress } from '@mui/material'\nimport { useMutation } from 'react-query'\n\nfunction Trend() {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const query: any = useGetParamUrl()\n  const { totalPage, response, isValidating } = useFetch(true, `${API_3RD.TRENDS}?page=${query?.page ?? 1}&include=services`)\n  const onChangePage = (page: number) => {\n    navigate({\n      pathname: location.pathname,\n      search: `page=${page}`\n    })\n  }\n  return (\n    <>\n      <TitlePage\n        title='Trends'\n        element={\n          <Button\n            size='large' color='success' variant='contained'\n            onClick={() => navigate('/pages/trend-form')}\n          >\n            Tạo mới\n          </Button>\n        }\n      />\n      <div className={`card mb-5 mb-xl-8`}>\n        <div className='card-header border-0 pt-5'>\n          <h3 className='card-title align-items-start flex-column'>\n            <span className='card-label fw-bold fs-3 mb-1'>Bài đăng</span>\n            {/* <span className='text-muted mt-1 fw-semobold fs-7'>Over {totalItem}</span> */}\n          </h3>\n        </div>\n        <div className='card-body py-3'>\n          <div className='table-responsive'>\n            <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n              <thead>\n                <tr className='fw-bold text-muted'>\n                  <th className='min-w-100px'>Bài đăng</th>\n                  <th className='min-w-70px'>Thumbnail</th>\n                  <th className='min-w-140px'>Doanh nghiệp</th>\n                  <th className='min-w-140px'>Dịch vụ được gán</th>\n                  <th className='min-w-120px'>Ngày đăng</th>\n                  <th className='min-w-120px'>Ngày sửa</th>\n                  <th className='min-w-100px'>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {response?.data?.map((item: ITrend) => (\n                  <TrendRow key={item._id} item={item} />\n                ))}\n              </tbody>\n            </table>\n            <PageCircularProgress loading={isValidating} />\n          </div>\n        </div>\n      </div>\n      <XPagination\n        onChangePage={onChangePage}\n        totalPage={totalPage}\n        defaultPage={query?.page ?? 1}\n      />\n    </>\n  )\n}\n\nconst TrendRow = ({ item }: { item: ITrend }) => {\n  const navigate = useNavigate()\n  const { noti, resultLoad, onCloseNoti } = useMessage()\n  const handleDetail = (serviceDetail: ITrend) => {\n    navigate(`/pages/trend-form/${serviceDetail._id}`)\n  }\n  const { mutate, isLoading } = useMutation({\n    mutationFn: () => request3rdApi.refreshComment(item._id),\n    onSuccess: () => resultLoad({ color: 'success', message: 'Refresh trend success' }),\n    onError: () => resultLoad({ color: 'error', message: 'Refresh trend fail' })\n  })\n  return (\n    <>\n      <tr key={item._id}>\n        <td>\n          <div className='d-flex align-items-center'>\n            <div className='symbol symbol-45px me-5'>\n              <img src={toAbsoluteUrl(item.organization_image)} alt='' />\n            </div>\n            <div className='d-flex justify-content-start flex-column'>\n              <span className='text-dark fw-bold fs-6'>{item.title}</span>\n            </div>\n          </div>\n        </td>\n        <td>\n          <div className='symbol symbol-75px me-5'>\n            <img style={{ objectFit: 'contain' }} src={toAbsoluteUrl(item.image_thumb)} alt='' />\n          </div>\n        </td>\n        <td>\n          <span className='text-dark fw-bold d-block fs-6'>\n            {item.organization_name}\n          </span>\n        </td>\n        <td>\n          {item.services?.map((service) => (\n            <p key={service.id} className='text-dark d-block fs-6'>\n              {service.service_name}\n            </p>\n          ))}\n        </td>\n        <td>\n          <span className='text-dark d-block fs-7'>\n            {dayjs(item.createdAt).format('DD/MM/YYYY')}\n          </span>\n        </td>\n        <td>\n          <span className='text-dark d-block fs-7'>\n            {dayjs(item.updatedAt).format('DD/MM/YYYY')}\n          </span>\n        </td>\n        <td>\n          <div className='d-flex justify-content-end flex-shrink-0'>\n            <button\n              onClick={() => handleDetail(item)}\n              style={{ marginRight: '6px' }}\n              className='btn btn-bg-light btn-color-muted btn-active-color-primary btn-sm px-4'\n            >\n              <i className='bi bi-pencil-fill fs-6'></i>\n            </button>\n            <button\n              onClick={() => mutate()}\n              className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'\n            >\n              {isLoading ? <CircularProgress size={12} /> : <i className=\"bi bi-arrow-clockwise\"></i>}\n            </button>\n          </div>\n        </td>\n      </tr>\n      <AppSnack\n        severity={noti.color}\n        message={noti.message}\n        open={noti.openAlert}\n        close={onCloseNoti}\n      />\n    </>\n  )\n}\n\nexport default Trend\n","import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    title: string\n    element?: JSX.Element\n}\n\nfunction TitlePage(props: IProps) {\n    const { title, element } = props;\n    return (\n        <div className='toolbar' id='kt_toolbar'>\n            <div id=\"kt_toolbar_container\" className='container-fluid d-flex flex-stack'>\n                <h1 className='d-flex align-items-center text-dark fw-bolder my-1 fs-3'>\n                    {title}\n                </h1>\n                {element}\n            </div>\n        </div>\n    );\n}\n\nexport default TitlePage;"],"names":["TrendRow","_ref","_item$services","item","navigate","useNavigate","noti","resultLoad","onCloseNoti","useMessage","mutate","isLoading","useMutation","mutationFn","request3rdApi","refreshComment","_id","onSuccess","color","message","onError","_jsxs","_Fragment","children","_jsx","className","src","toAbsoluteUrl","organization_image","alt","title","style","objectFit","image_thumb","organization_name","services","map","service","service_name","id","dayjs","createdAt","format","updatedAt","onClick","marginRight","CircularProgress","size","AppSnack","severity","open","openAlert","close","_query$page","_response$data","_query$page2","location","useLocation","query","useGetParamUrl","totalPage","response","isValidating","useFetch","API_3RD","TRENDS","page","TitlePage","element","Button","variant","data","PageCircularProgress","loading","XPagination","onChangePage","pathname","search","defaultPage","props"],"sourceRoot":""}