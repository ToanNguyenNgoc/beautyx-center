{"version":3,"file":"static/js/693.73815a68.chunk.js","mappings":"wRAee,SAASA,EAAQC,GAC9B,IAAOC,EAAsBD,EAAtBC,OAAQC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,MACpB,GAAmCC,EAAAA,EAAAA,YAAU,OAACF,QAAD,IAACA,IAAAA,EAAKG,SAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,aAAY,CACtCC,WAAY,SAACC,GAAD,OAAgBC,EAAAA,EAAAA,UAAiBV,EAAOS,IACpDE,UAAW,WACTC,EAAAA,EAAAA,kBAA8B,CAACC,EAAAA,GAAAA,WAC/BR,GAAU,IAEZS,QAAS,SAACC,GACRC,QAAQC,IAAIF,MAPTG,EAAP,EAAOA,OAAQC,EAAf,EAAeA,UAUfH,QAAQC,IAAIE,GACZ,OAAgDZ,EAAAA,EAAAA,aAAY,CAC1DC,WAAY,SAACC,GAAD,OAAgBC,EAAAA,EAAAA,QAAeD,IAC3CE,UAAW,WACTC,EAAAA,EAAAA,kBAA8B,CAACC,EAAAA,GAAAA,WAC/BR,GAAU,IAEZS,QAAS,SAACC,GACRC,QAAQC,IAAIF,MAPDK,EAAf,EAAOF,OAA2BG,EAAlC,EAAuBF,UAUjBG,GAAcC,EAAAA,EAAAA,IAAU,CAC5BC,cAAe,CACbC,KAAiB,SAAX3B,EAAA,OAAoBC,QAApB,IAAoBA,OAApB,EAAoBA,EAAK0B,KAAO,GACtCC,KAAiB,SAAX5B,EAAA,OAAoBC,QAApB,IAAoBA,OAApB,EAAoBA,EAAK2B,KAAO,GACtCC,SAAqB,SAAX7B,EAAA,OAAoBC,QAApB,IAAoBA,OAApB,EAAoBA,EAAK4B,SAAW,EAC9CzB,OAAmB,SAAXJ,EAAoBK,EAAgB,GAE9CyB,iBAAkBC,EAAAA,GAAW,CAC3BJ,KAAMI,EAAAA,KAAaC,OAAOC,SAAS,uCACnCL,KAAMG,EAAAA,KAAaC,OAAOC,SAAS,mCACnCJ,SAAUE,EAAAA,KAAaE,SAAS,sDAA4BC,IAAI,EAAG,8DAErEC,SAAU,SAACxB,GACT,IAAMyB,GAAQ,kBACTzB,GADS,IAEZP,OAAQO,EAAMP,OAAS,EAAI,IAEd,QAAXJ,EACFsB,EAAOc,GAEPhB,EAAOgB,MAIb,OACE,+BACE,iBACEC,UAAU,gCACVF,SAAUX,EAAOc,aACjBC,aAAa,MAHf,UAKE,iBAAKF,UAAU,SAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,kBAAOA,UAAU,aAAjB,4BACA,qBACEG,SAAUhB,EAAOiB,aACjB9B,MAAOa,EAAOkB,OAAOf,KACrBU,UAAU,eACVM,YAAY,KACZC,KAAM,EACNC,KAAM,GACNlB,KAAK,SAENH,EAAOsB,OAAOnB,MAAQH,EAAOuB,QAAQpB,OACpC,iBAAMU,UAAU,2BAAhB,SAA4Cb,EAAOsB,OAAOnB,WAG9D,iBAAKU,UAAU,YAAf,WACE,iBAAKA,UAAU,kBAAf,WACE,kBAAOA,UAAU,aAAjB,wBACA,kBACEW,SAAqB,SAAXhD,EACVwC,SAAUhB,EAAOiB,aACjB9B,MAAOa,EAAOkB,OAAOd,KACrBA,KAAK,OACLS,UAAU,eACVM,YAAY,KACZhB,KAAK,SAENH,EAAOsB,OAAOlB,MAAQJ,EAAOuB,QAAQnB,OACpC,iBAAMS,UAAU,2BAAhB,SAA4Cb,EAAOsB,OAAOlB,WAG9D,iBAAKS,UAAU,kBAAf,WACE,kBAAOA,UAAU,aAAjB,2CACA,kBACEG,SAAUhB,EAAOiB,aACjB9B,MAAOa,EAAOkB,OAAOb,SACrBD,KAAK,SACLS,UAAU,eACVM,YAAY,KACZhB,KAAK,aAENH,EAAOsB,OAAOjB,UAAYL,EAAOuB,QAAQlB,WACxC,iBAAMQ,UAAU,2BAAhB,SAA4Cb,EAAOsB,OAAOjB,eAG9D,iBAAKQ,UAAU,kBAAf,WACE,kBAAOA,UAAU,aAAjB,iCACA,0BACE,SAAC,KAAD,CACE1B,MAAOa,EAAOkB,OAAOtC,OACrBoC,SAAU,SAACS,GAAD,OAAO3C,EAAU2C,EAAEC,OAAOC,UACpCC,MAAM,mEAKd,iBAAKf,UAAU,8BAAf,WACE,mBAAQgB,QAAS,kBAAM9C,GAAU,IAAIqB,KAAK,SAASS,UAAU,kBAA7D,4BACA,mBAAQW,YAAU3B,IAAaE,GAA2Bc,UAAU,kBAApE,SACGhB,GAAaE,EAAa,aAAe,0C,eC7HzC,SAAS+B,IACtB,IAAMC,GAAcC,EAAAA,EAAAA,MAChBxD,EAAS,MACTuD,GAAUA,EAAOE,KACnBzD,EAAS,QAEX,IAAO0D,GAAQC,EAAAA,EAAAA,UAAS,CACtBC,SAAU,CAAC7C,EAAAA,GAAAA,SAAiBwC,EAAOE,IACnCI,QAAS,kBAAMjD,EAAAA,EAAAA,QAAekD,SAASP,EAAOE,QAFzCC,KAIDzD,EAAG,OAAGyD,QAAH,IAAGA,OAAH,EAAGA,EAAMK,QAClB,OACE,iCACE,SAACC,EAAA,EAAD,CAAWC,MAAa,OAANV,QAAM,IAANA,GAAAA,EAAQE,GAAK,uCAA4B,2BAC9C,QAAXzD,GAAoBC,KACpB,SAACH,EAAD,CAASI,MAAO4D,SAASP,EAAOE,IAAMxD,IAAKA,EAAKD,OAAQA,S,8ECChE,MAdA,SAAmBD,GACf,IAAQkE,EAAmBlE,EAAnBkE,MAAOC,EAAYnE,EAAZmE,QACf,OACI,gBAAK7B,UAAU,UAAUoB,GAAG,aAA5B,UACI,iBAAKA,GAAG,uBAAuBpB,UAAU,oCAAzC,WACI,eAAIA,UAAU,0DAAd,SACK4B,IAEJC","sources":["app/pages/tips/module/form.tsx","app/pages/tips/module/tips-form.tsx","components/TitlePage/index.tsx"],"sourcesContent":["import tipAPI from 'app/api/tipApi'\nimport { Tips } from 'app/interface'\nimport { QR_KEY } from 'common'\nimport { XSwitch } from 'components'\nimport { useFormik } from 'formik'\nimport { queryClient } from 'index'\nimport { useState } from 'react'\nimport { useMutation } from 'react-query'\nimport { useNavigate } from 'react-router-dom'\nimport * as Yup from 'yup'\ntype Props = {\n  isForm: string\n  tip: Tips | undefined\n  tipId: number\n}\nexport default function FormTip(props: Props) {\n  const {isForm, tip, tipId} = props\n  const [statusDefault, setStatus] = useState(!!tip?.status)\n  const navigate = useNavigate()\n  const {mutate, isLoading} = useMutation({\n    mutationFn: (value: any) => tipAPI.updateTip(tipId, value),\n    onSuccess: () => {\n      queryClient.invalidateQueries([QR_KEY.TIP_PAGE]);\n      navigate(-1)\n    },\n    onError: (error) => {\n      console.log(error)\n    },\n  })\n  console.log(isLoading)\n  const {mutate: addTip, isLoading: loadingTip} = useMutation({\n    mutationFn: (value: any) => tipAPI.postTip(value),\n    onSuccess: () => {\n      queryClient.invalidateQueries([QR_KEY.TIP_PAGE]);\n      navigate(-1)\n    },\n    onError: (error) => {\n      console.log(error)\n    },\n  })\n  const formik: any = useFormik({\n    initialValues: {\n      name: isForm === 'EDIT' ? tip?.name : '',\n      type: isForm === 'EDIT' ? tip?.type : '',\n      priority: isForm === 'EDIT' ? tip?.priority : 0,\n      status: isForm === 'EDIT' ? statusDefault : 1\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().trim().required('Vui lòng nhập nội dung'),\n      type: Yup.string().trim().required('Vui lòng nhập loại'),\n      priority: Yup.number().required('Vui lòng nhập độ ưu tiên').min(0, \"Độ ưu tiên thấp nhất là 0\"),\n    }),\n    onSubmit: (value) => {\n      const newValue = {\n        ...value,\n        status: value.status ? 1 : 0,\n      }\n      if (isForm === 'ADD') {\n        addTip(newValue)\n      } else {\n        mutate(newValue)\n      }\n    },\n  })\n  return (\n    <>\n      <form\n        className='discount-form mb-10 container'\n        onSubmit={formik.handleSubmit}\n        autoComplete='off'\n      >\n        <div className='col-12'>\n          <div className='wrap-item col-12'>\n            <label className='form-label'>Nội dung</label>\n            <textarea\n              onChange={formik.handleChange}\n              value={formik.values.name}\n              className='form-control'\n              placeholder='Aa'\n              rows={4}\n              cols={50}\n              name='name'\n            />\n            {formik.errors.name && formik.touched.name && (\n              <span className='text-danger d-block mt-2'>{formik.errors.name}</span>\n            )}\n          </div>\n          <div className='row mt-10'>\n            <div className='wrap-item col-4'>\n              <label className='form-label'>Loại</label>\n              <input\n                disabled={isForm === 'EDIT' ? true : false}\n                onChange={formik.handleChange}\n                value={formik.values.type}\n                type='text'\n                className='form-control'\n                placeholder='Aa'\n                name='type'\n              />\n              {formik.errors.type && formik.touched.type && (\n                <span className='text-danger d-block mt-2'>{formik.errors.type}</span>\n              )}\n            </div>\n            <div className='wrap-item col-4'>\n              <label className='form-label'>Độ ưu tiên</label>\n              <input\n                onChange={formik.handleChange}\n                value={formik.values.priority}\n                type='number'\n                className='form-control'\n                placeholder='Aa'\n                name='priority'\n              />\n              {formik.errors.priority && formik.touched.priority && (\n                <span className='text-danger d-block mt-2'>{formik.errors.priority}</span>\n              )}\n            </div>\n            <div className='wrap-item col-4'>\n              <label className='form-label'>Trạng thái</label>\n              <div>\n                <XSwitch\n                  value={formik.values.status}\n                  onChange={(e) => setStatus(e.target.checked)}\n                  label='Kích hoạt để hiển thị tip'\n                />\n              </div>\n            </div>\n          </div>\n          <div className='d-flex flex-end gap-4 mt-10'>\n            <button onClick={() => navigate(-1)} type='button' className='btn btn-primary'>Quay lại</button>\n            <button disabled={isLoading || loadingTip ? true : false} className='btn btn-success'>\n              {isLoading || loadingTip ? 'Loading...' : 'Lưu thay đổi'}\n            </button>\n          </div>\n        </div>\n      </form>\n    </>\n  )\n}","import tipAPI from 'app/api/tipApi'\nimport FormTip from 'app/pages/tips/module/form'\nimport { QR_KEY } from 'common'\nimport TitlePage from 'components/TitlePage'\nimport { useQuery } from 'react-query'\nimport { useParams } from 'react-router-dom'\nexport default function TipsForm() {\n  const params: any = useParams()\n  let isForm = 'ADD'\n  if (params && params.id) {\n    isForm = 'EDIT'\n  }\n  const {data} = useQuery({\n    queryKey: [QR_KEY.TIP_PAGE, params.id],\n    queryFn: () => tipAPI.getById(parseInt(params.id)),\n  })\n  const tip = data?.context\n  return (\n    <>\n      <TitlePage title={params?.id ? 'Chỉnh sửa thông tin Tip' : 'Tạo mới Tip'} />\n      {(isForm === 'ADD' || tip) &&\n        <FormTip tipId={parseInt(params.id)}  tip={tip} isForm={isForm} />\n      }\n    </>\n  )\n}","import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    title: string\n    element?: JSX.Element\n}\n\nfunction TitlePage(props: IProps) {\n    const { title, element } = props;\n    return (\n        <div className='toolbar' id='kt_toolbar'>\n            <div id=\"kt_toolbar_container\" className='container-fluid d-flex flex-stack'>\n                <h1 className='d-flex align-items-center text-dark fw-bolder my-1 fs-3'>\n                    {title}\n                </h1>\n                {element}\n            </div>\n        </div>\n    );\n}\n\nexport default TitlePage;"],"names":["FormTip","props","isForm","tip","tipId","useState","status","statusDefault","setStatus","navigate","useNavigate","useMutation","mutationFn","value","tipAPI","onSuccess","queryClient","QR_KEY","onError","error","console","log","mutate","isLoading","addTip","loadingTip","formik","useFormik","initialValues","name","type","priority","validationSchema","Yup","trim","required","min","onSubmit","newValue","className","handleSubmit","autoComplete","onChange","handleChange","values","placeholder","rows","cols","errors","touched","disabled","e","target","checked","label","onClick","TipsForm","params","useParams","id","data","useQuery","queryKey","queryFn","parseInt","context","TitlePage","title","element"],"sourceRoot":""}