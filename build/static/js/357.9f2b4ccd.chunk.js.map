{"version":3,"file":"static/js/357.9f2b4ccd.chunk.js","mappings":"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","sources":["app/pages/tips/module/form.tsx","app/pages/tips/module/tips-form.tsx"],"sourcesContent":["import tipAPI from 'app/api/tipApi'\nimport { Tips } from 'app/interface'\nimport { QR_KEY } from 'common'\nimport { XSwitch } from 'components'\nimport { useFormik } from 'formik'\nimport { queryClient } from 'index'\nimport { useState } from 'react'\nimport { useMutation } from 'react-query'\nimport { useNavigate } from 'react-router-dom'\nimport * as Yup from 'yup'\ntype Props = {\n  isForm: string\n  tip: Tips | undefined\n  tipId: number\n}\nexport default function FormTip(props: Props) {\n  const {isForm, tip, tipId} = props\n  const [statusDefault, setStatus] = useState(!!tip?.status)\n  const navigate = useNavigate()\n  const {mutate, isLoading} = useMutation({\n    mutationFn: (value: any) => tipAPI.updateTip(tipId, value),\n    onSuccess: () => {\n      queryClient.invalidateQueries([QR_KEY.TIP_PAGE]);\n      navigate(-1)\n    },\n    onError: (error) => {\n      console.log(error)\n    },\n  })\n  console.log(isLoading)\n  const {mutate: addTip, isLoading: loadingTip} = useMutation({\n    mutationFn: (value: any) => tipAPI.postTip(value),\n    onSuccess: () => {\n      queryClient.invalidateQueries([QR_KEY.TIP_PAGE]);\n      navigate(-1)\n    },\n    onError: (error) => {\n      console.log(error)\n    },\n  })\n  const formik: any = useFormik({\n    initialValues: {\n      name: isForm === 'EDIT' ? tip?.name : '',\n      type: isForm === 'EDIT' ? tip?.type : '',\n      priority: isForm === 'EDIT' ? tip?.priority : 0,\n      status: isForm === 'EDIT' ? statusDefault : 1\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().trim().required('Vui lòng nhập nội dung'),\n      type: Yup.string().trim().required('Vui lòng nhập loại'),\n      priority: Yup.number().required('Vui lòng nhập độ ưu tiên').min(0, \"Độ ưu tiên thấp nhất là 0\"),\n    }),\n    onSubmit: (value) => {\n      const newValue = {\n        ...value,\n        status: value.status ? 1 : 0,\n      }\n      if (isForm === 'ADD') {\n        addTip(newValue)\n      } else {\n        mutate(newValue)\n      }\n    },\n  })\n  return (\n    <>\n      <form\n        className='discount-form mb-10 container'\n        onSubmit={formik.handleSubmit}\n        autoComplete='off'\n      >\n        <div className='col-12'>\n          <div className='wrap-item col-12'>\n            <label className='form-label'>Nội dung</label>\n            <textarea\n              onChange={formik.handleChange}\n              value={formik.values.name}\n              className='form-control'\n              placeholder='Aa'\n              rows={4}\n              cols={50}\n              name='name'\n            />\n            {formik.errors.name && formik.touched.name && (\n              <span className='text-danger d-block mt-2'>{formik.errors.name}</span>\n            )}\n          </div>\n          <div className='row mt-10'>\n            <div className='wrap-item col-4'>\n              <label className='form-label'>Loại</label>\n              <input\n                disabled={isForm === 'EDIT' ? true : false}\n                onChange={formik.handleChange}\n                value={formik.values.type}\n                type='text'\n                className='form-control'\n                placeholder='Aa'\n                name='type'\n              />\n              {formik.errors.type && formik.touched.type && (\n                <span className='text-danger d-block mt-2'>{formik.errors.type}</span>\n              )}\n            </div>\n            <div className='wrap-item col-4'>\n              <label className='form-label'>Độ ưu tiên</label>\n              <input\n                onChange={formik.handleChange}\n                value={formik.values.priority}\n                type='number'\n                className='form-control'\n                placeholder='Aa'\n                name='priority'\n              />\n              {formik.errors.priority && formik.touched.priority && (\n                <span className='text-danger d-block mt-2'>{formik.errors.priority}</span>\n              )}\n            </div>\n            <div className='wrap-item col-4'>\n              <label className='form-label'>Trạng thái</label>\n              <div>\n                <XSwitch\n                  value={formik.values.status}\n                  onChange={(e) => setStatus(e.target.checked)}\n                  label='Kích hoạt để hiển thị tip'\n                />\n              </div>\n            </div>\n          </div>\n          <div className='d-flex flex-end gap-4 mt-10'>\n            <button onClick={() => navigate(-1)} type='button' className='btn btn-primary'>Quay lại</button>\n            <button disabled={isLoading || loadingTip ? true : false} className='btn btn-success'>\n              {isLoading || loadingTip ? 'Loading...' : 'Lưu thay đổi'}\n            </button>\n          </div>\n        </div>\n      </form>\n    </>\n  )\n}","import tipAPI from 'app/api/tipApi'\nimport FormTip from 'app/pages/tips/module/form'\nimport { QR_KEY } from 'common'\nimport TitlePage from 'components/TitlePage'\nimport { useQuery } from 'react-query'\nimport { useParams } from 'react-router-dom'\nexport default function TipsForm() {\n  const params: any = useParams()\n  let isForm = 'ADD'\n  if (params && params.id) {\n    isForm = 'EDIT'\n  }\n  const {data} = useQuery({\n    queryKey: [QR_KEY.TIP_PAGE, params.id],\n    queryFn: () => tipAPI.getById(parseInt(params.id)),\n  })\n  const tip = data?.context\n  return (\n    <>\n      <TitlePage title={params?.id ? 'Chỉnh sửa thông tin Tip' : 'Tạo mới Tip'} />\n      {(isForm === 'ADD' || tip) &&\n        <FormTip tipId={parseInt(params.id)}  tip={tip} isForm={isForm} />\n      }\n    </>\n  )\n}"],"names":["FormTip","props","isForm","tip","tipId","statusDefault","setStatus","useState","status","navigate","useNavigate","mutate","isLoading","useMutation","mutationFn","value","tipAPI","updateTip","onSuccess","queryClient","invalidateQueries","QR_KEY","TIP_PAGE","onError","error","console","log","addTip","loadingTip","postTip","formik","useFormik","initialValues","name","type","priority","validationSchema","Yup","trim","required","min","onSubmit","newValue","_jsx","_Fragment","children","className","handleSubmit","autoComplete","_jsxs","onChange","handleChange","values","placeholder","rows","cols","errors","touched","disabled","XSwitch","e","target","checked","label","onClick","TipsForm","params","useParams","id","data","useQuery","queryKey","queryFn","getById","parseInt","context","TitlePage","title"],"sourceRoot":""}