{"version":3,"file":"static/js/445.931f2ae4.chunk.js","mappings":"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","sources":["app/pages/push-notification/module/push-notification-form.tsx","components/TitlePage/index.tsx"],"sourcesContent":["import TitlePage from \"components/TitlePage\";\nimport \"./form.scss\"\nimport { useFormik } from \"formik\";\nimport { MenuItem, Select } from \"@mui/material\";\nimport { IMGS } from \"_metronic/assets/imgs/imgs\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { NOTI_TYPES, PLAT_FORM, TYPE, dev, getEnvParam } from \"app/util\";\nimport * as yup from \"yup\"\nimport { useMutation } from \"react-query\";\nimport { ReqPostNotification } from \"@types\";\nimport { notificationApi } from \"app/api\";\nimport { useMessage } from \"app/hooks\";\nimport { AxiosError } from \"axios\";\nimport { AppSnack, SelectPromotion, SelectionDiscounts, SelectionOrg } from \"components\";\nimport { useState } from \"react\";\nimport { IDiscountPar, IOrganization } from \"app/interface\";\nimport { request3rdApi } from \"app/api/api-3rd-client\";\n\nfunction PushNotificationForm() {\n  const { resultLoad, noti, onCloseNoti } = useMessage()\n  const [org, setOrg] = useState<IOrganization>()\n  const [discount, setDiscount] = useState<IDiscountPar>()\n  const { mutate, isLoading } = useMutation({\n    mutationFn: (body: ReqPostNotification) => getEnvParam() === dev ?\n      request3rdApi.postNotification(body)\n      :\n      notificationApi.post(body),\n    onSuccess: () => resultLoad({\n      message: 'Push thông báo thành công',\n      color: 'success'\n    }),\n    onError: (errors: any) => {\n      const err = errors as AxiosError\n      resultLoad({\n        color: 'error',\n        message: `Có lỗi xảy ra. Mã lỗi ${err?.request?.status}`\n      })\n    }\n  })\n  const { values, errors, handleChange, handleSubmit, touched, setFieldValue } = useFormik({\n    initialValues: {\n      title: '',\n      description: '',\n      type: '',\n      link: '',\n      payload_id: ''\n    },\n    validationSchema: yup.object({\n      title: yup.string().required('Nhập tiêu đền'),\n      description: yup.string().required('Nhập nội dung'),\n      type: yup.string().required('Chọn loại thông báo cho'),\n      link: yup.string().required('NHập đường dẫn')\n    }),\n    onSubmit: (values) => {\n      let payload_id = values.payload_id\n      if (Number(values.type) === TYPE.ORG.id && org) payload_id = String(org?.id)\n      if (Number(values.type) === TYPE.DISCOUNT.id && discount) payload_id = discount.uuid\n      mutate({ ...values, payload_id })\n    }\n  })\n  return (\n    <>\n      <TitlePage title=\"Thông báo\" />\n      <AppSnack\n        severity={noti.color}\n        message={noti.message}\n        open={noti.openAlert}\n        close={onCloseNoti}\n      />\n      <div className='post d-flex flex-column-fluid' id=\"kt_post\">\n        <div className=\"notification-cnt\">\n          <form onSubmit={handleSubmit} className=\"form-left\">\n            <div className=\"column\">\n              <div className=\"required form-label\">Tiêu đề</div>\n              <input\n                value={values.title}\n                onChange={handleChange}\n                type=\"text\"\n                name=\"title\"\n                className=\"form-control form-control-solid mt-1 mb-4\"\n              />\n              {\n                errors.title && touched.title &&\n                <span className=\"text-danger\">{errors.title}</span>\n              }\n            </div>\n            <div className=\"column\">\n              <div className=\"required form-label\">Nội dung thông báo</div>\n              <input\n                value={values.description}\n                onChange={handleChange}\n                type=\"text\"\n                name=\"description\"\n                className=\"form-control form-control-solid mt-1 mb-4\"\n              />\n              {\n                errors.description && touched.description &&\n                <span className=\"text-danger\">{errors.description}</span>\n              }\n            </div>\n            <div className=\"column mb-4\">\n              <div className=\"required form-label\">Thông báo cho</div>\n              <Select\n                size=\"small\"\n                name=\"type\"\n                value={values.type}\n                onChange={handleChange}\n              >\n                {\n                  NOTI_TYPES.map(i => (\n                    <MenuItem key={i.id} value={String(i.id)}>{i.title}</MenuItem>\n                  ))\n                }\n              </Select>\n              {\n                errors.type && touched.type &&\n                <span className=\"text-danger\">{errors.type}</span>\n              }\n            </div>\n            <>\n              {\n                Number(values.type) === TYPE.ORG.id &&\n                <div className=\"column\">\n                  <SelectionOrg\n                    organization_id={values.payload_id}\n                    origin={org}\n                    setOrigin={setOrg}\n                  />\n                </div>\n              }\n              {\n                Number(values.type) === TYPE.PROMOTION.id &&\n                <div className=\"column\">\n                  <SelectPromotion\n                    value={values.payload_id}\n                    onChange={(id) => setFieldValue('payload_id', String(id))}\n                  />\n                </div>\n              }\n              {\n                Number(values.type) === TYPE.DISCOUNT.id &&\n                <div className=\"column\">\n                  <SelectionDiscounts\n                    label=\"Gắn deal giảm giá\"\n                    onChangeDiscounts={(i) => setDiscount(i[i.length - 1])}\n                    filterAll={false}\n                    platform={PLAT_FORM.MOMO}\n                    discounts={discount ? [discount] : []}\n                  />\n                </div>\n              }\n            </>\n            <div className=\"column\">\n              <div className=\"required form-label\">Đường dẫn</div>\n              <input\n                value={values.link}\n                onChange={handleChange}\n                type=\"text\"\n                name=\"link\"\n                className=\"form-control form-control-solid mt-1 mb-4\"\n              />\n              {\n                errors.link && touched.link &&\n                <span className=\"text-danger\">{errors.link}</span>\n              }\n            </div>\n            <div className=\"d-flex justify-content-end mt-6\">\n              <LoadingButton type=\"submit\" variant=\"contained\" color=\"success\" loading={isLoading} >\n                Push thông báo\n              </LoadingButton>\n            </div>\n          </form>\n          <div className=\"preview-right\">\n            <span className=\"title\">Giao diện thông báo</span>\n            <div className=\"device-cnt\">\n              <div className=\"device\">\n                <img className=\"device-img\" src={IMGS.android} alt=\"\" />\n                <div className=\"device-noti\">\n                  <div className=\"item\">\n                    <div className=\"item-icon\">\n                      <img src={IMGS.beautyxIcon} alt=\"\" />\n                    </div>\n                    <div className=\"item-right\">\n                      <p className=\"item-right-title\">{values.title}</p>\n                      <p className=\"item-right-content\">{values.description}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"device-cnt\">\n              <div className=\"device\">\n                <img className=\"device-img\" src={IMGS.iphone} alt=\"\" />\n                <div className=\"device-noti\" style={{ marginTop: '50px' }}>\n                  <div className=\"item\">\n                    <div className=\"item-icon\">\n                      <img src={IMGS.beautyxIcon} alt=\"\" />\n                    </div>\n                    <div className=\"item-right\">\n                      <p className=\"item-right-title\">{values.title}</p>\n                      <p className=\"item-right-content\">{values.description}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default PushNotificationForm;","import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    title: string\n    element?: JSX.Element\n}\n\nfunction TitlePage(props: IProps) {\n    const { title, element } = props;\n    return (\n        <div className='toolbar' id='kt_toolbar'>\n            <div id=\"kt_toolbar_container\" className='container-fluid d-flex flex-stack'>\n                <h1 className='d-flex align-items-center text-dark fw-bolder my-1 fs-3'>\n                    {title}\n                </h1>\n                {element}\n            </div>\n        </div>\n    );\n}\n\nexport default TitlePage;"],"names":["useMessage","resultLoad","noti","onCloseNoti","useState","org","setOrg","discount","setDiscount","useMutation","mutationFn","body","getEnvParam","dev","request3rdApi","notificationApi","onSuccess","message","color","onError","errors","request","status","mutate","isLoading","useFormik","initialValues","title","description","type","link","payload_id","validationSchema","yup","required","onSubmit","values","Number","TYPE","String","id","uuid","handleChange","handleSubmit","touched","setFieldValue","TitlePage","severity","open","openAlert","close","className","value","onChange","name","Select","size","NOTI_TYPES","i","MenuItem","organization_id","origin","setOrigin","label","onChangeDiscounts","length","filterAll","platform","PLAT_FORM","discounts","LoadingButton","variant","loading","src","IMGS","alt","style","marginTop","props","element"],"sourceRoot":""}