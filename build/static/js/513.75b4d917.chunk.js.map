{"version":3,"file":"static/js/513.75b4d917.chunk.js","mappings":"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","sources":["app/pages/discounts/module/discount-form/select-service.tsx","app/pages/trends/module/trend-form.tsx","components/TitlePage/index.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useRef, useState } from \"react\"\nimport \"./style.scss\"\nimport { Avatar, Chip, CircularProgress } from \"@mui/material\"\nimport { IOrganization, IService } from \"app/interface\"\nimport orgApi from \"app/api/orgApi\"\nimport { debounce } from \"lodash\"\nimport { formatPrice, onErrorImg } from \"app/util\"\n\ninterface SelectServiceProps {\n  orgsChoose?: IOrganization[],\n  values: IService[],\n  setValues?: (values: any) => void,\n  onChangeService?: (service: IService[]) => void\n}\n\nexport const SelectService = ({ orgsChoose = [], values = [], setValues, onChangeService }: SelectServiceProps) => {\n  const refBox = useRef<HTMLDivElement | null>(null)\n  const selected_id = values.map(i => i.id)\n  const [services, setServices] = useState<{ data: any[], load: boolean }>({ data: [], load: false })\n  const onTriggerBox = (type: 'show' | 'hide') => {\n    if (orgsChoose.length > 0) {\n      if (type === 'show') return refBox.current?.classList?.add('box-services-show')\n    }\n    if (type === 'hide') return refBox.current?.classList?.remove('box-services-show')\n  }\n  window.addEventListener('click', () => onTriggerBox('hide'))\n  //\n  const getServicesByOrgs = async (keyword: string, orgsChoose: any) => {\n    let servicesSearch = [];\n    for (var org of orgsChoose) {\n      const res = await orgApi.getServicesByOrg({\n        keyword: keyword,\n        org_id: org?.id,\n      })\n      const newValues = {\n        services: res?.data.context.data,\n        org: org\n      }\n      servicesSearch.push(newValues)\n    }\n    setServices({ data: servicesSearch, load: false })\n  }\n  const debounceDropDownServices = useCallback(\n    debounce((nextValue, orgsChoose) => {\n      setServices({ data: [], load: true })\n      getServicesByOrgs(nextValue, orgsChoose);\n    }, 1500),\n    []\n  );\n  const onChangeSearchServicesProducts = (e: any) => {\n    if (orgsChoose && orgsChoose.length > 0) {\n      debounceDropDownServices(e.target.value, orgsChoose)\n    }\n  }\n  const list = services.data?.map(i => i.services).flat() ?? []\n  const onSelect = (item: IService) => {\n    if (onChangeService) {\n      const iIndex = values.findIndex(i => i.id === item.id)\n      if (iIndex < 0) {\n        onChangeService([...values, item])\n      } else {\n        onChangeService(values.filter(i => i.id !== item.id))\n      }\n      return\n    }\n    if (setValues) {\n      setValues((prev: any) => {\n        const index = prev.findIndex((i: any) => i.id === item.id)\n        if (index < 0) {\n          prev = [...prev, item]\n          return prev\n        } else {\n          return prev.filter((i: any) => i.id !== item.id)\n        }\n      })\n      return\n    }\n  }\n  return (\n    <div className=\"select-services\">\n      <label className=\"required form-label\">Sản phẩm áp dụng</label>\n      <div onClick={(e) => { e.stopPropagation(); onTriggerBox('show') }} className=\"form-control form-control-solid ser-selected\">\n        {\n          values.map(item => (\n            <Chip\n              key={item.id}\n              label={`${item.service_name} | Giá gốc: ${formatPrice(item.price)}`}\n              onDelete={() => onSelect(item)}\n              size=\"medium\"\n              color=\"primary\"\n              avatar={<Avatar src={item.image_url} />}\n            />\n          ))\n        }\n      </div>\n      <div onClick={(e) => e.stopPropagation()} ref={refBox} className=\"box-services\">\n        <div className=\"box-service-input\">\n          {services.load && <CircularProgress size={16} />}\n          <input onChange={onChangeSearchServicesProducts} type=\"text\"\n            className=\"form-control form-control-solid\" placeholder=\"Tìm kiếm dịch vụ...\"\n          />\n        </div>\n        <div className=\"services-list\">\n          <ul>\n            {\n              list.filter(Boolean).map((item: IService, index: number) => (\n                <li key={index}>\n                  <div style={selected_id.includes(item.id) ? { backgroundColor: 'var(--kt-gray-200)' } : {}}\n                    onClick={() => onSelect(item)} className=\"service-item\"\n                  >\n                    <div className=\"image\">\n                      <img src={item.image_url} onError={(e) => onErrorImg(e)} alt=\"\" />\n                    </div>\n                    <div className=\"service-detail\">\n                      <p className=\"service-name\">{item.service_name}</p>\n                      <p className=\"service-price\">{formatPrice(item.price)}</p>\n                    </div>\n                  </div>\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}","import TitlePage from 'components/TitlePage'\nimport { useFormik } from 'formik'\nimport { ChangeEvent, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useMessage, usePostMedia } from 'app/hooks'\nimport { accept_image, accept_video } from 'app/util'\nimport { IMGS } from '_metronic/assets/imgs/imgs'\nimport { CircularProgress } from '@mui/material'\nimport { useMutation, useQuery } from 'react-query'\nimport { request3rdApi } from 'app/api/api-3rd-client'\nimport { LoadingButton } from '@mui/lab'\nimport { IOrganization, IService } from 'app/interface'\nimport { AppSnack, SelectionOrg } from 'components'\nimport { SelectService } from 'app/pages/discounts/module/discount-form/select-service'\nimport './style.scss'\nimport { AxiosError } from 'axios'\n\n\nfunction TrendForm() {\n  const params: any = useParams()\n  const { resultLoad, noti, onCloseNoti } = useMessage()\n  const { handlePostMedia: handlePostThumb } = usePostMedia()\n  const [organization, setOrganization] = useState<IOrganization>()\n  const [services, setServices] = useState<IService[]>([])\n  const { handlePostMedia, isLoading } = usePostMedia()\n  const { mutate, isLoading: isLoadPost } = useMutation({\n    mutationFn: (body: any) => params.id ? request3rdApi.putTrend(params.id, body) : request3rdApi.postTrend(body),\n    onSuccess: () => params.id ? resultLoad({ message: 'Cập nhật thành công' }) : resultLoad({ message: 'Tạo mới thành công' }),\n    onError: (errors: any) => {\n      const err = errors as AxiosError\n      resultLoad({\n        color: 'error',\n        message: `Có lỗi xảy ra. Mã lỗi ${err?.request?.status}`\n      })\n    }\n  })\n  const formik = useFormik({\n    initialValues: {\n      media_url: '',\n      image_thumb: '',\n      title: '',\n      content: '',\n      trend_url: ''\n    },\n    onSubmit: (values) => {\n      mutate({\n        ...values,\n        organization_id: organization?.id,\n        services: services.map(i => i.id\n        )\n      })\n    }\n  })\n  const { refetch, isRefetching, data } = useQuery({\n    queryKey: ['TREND', params.id],\n    queryFn: () => request3rdApi.trend(params.id),\n    enabled: params.id ? true : false,\n    onSuccess: (data) => {\n      const trend = data.context\n      const ser: any = trend.services\n      setServices(ser)\n      formik.setFieldValue('media_url', trend.media_url)\n      formik.setFieldValue('image_thumb', trend.image_thumb)\n      formik.setFieldValue('title', trend.title)\n      formik.setFieldValue('content', trend.content)\n      formik.setFieldValue('trend_url', trend.trend_url)\n    }\n  })\n  const onChangeVideo = (e: ChangeEvent<HTMLInputElement>) => {\n    handlePostMedia({\n      e,\n      callBack: (data) => formik.setFieldValue('media_url', data[0]?.original_url),\n      version: 'api.beautyx',\n      resetOriginalResult:true\n    })\n  }\n  const onChangeThumb = (e: ChangeEvent<HTMLInputElement>) => {\n    handlePostThumb({\n      e,\n      callBack: (data) => formik.setFieldValue('image_thumb', data[0]?.original_url),\n      version: 'api.beautyx',\n      resetOriginalResult:true\n    })\n  }\n  return (\n    <>\n      <AppSnack\n        severity={noti.color}\n        message={noti.message}\n        open={noti.openAlert}\n        close={onCloseNoti}\n      />\n      <TitlePage title={params.id ? 'Thay đổi nội dung' : 'Thêm mới'} />\n      <div className=\"container\">\n        <form onSubmit={formik.handleSubmit} className=\"trend-form\">\n          <div className=\"video d-flex justify-content-between\">\n            <div className=\"video-left\">\n              <div className=\"required form-label\">Video</div>\n              <div className=\"drag-video\">\n                {\n                  isLoading &&\n                  <div className=\"drag-video-load\">\n                    Đang tải video lên...\n                    <CircularProgress />\n                  </div>\n                }\n                {\n                  formik.values.media_url === \"\" ?\n                    <img src={IMGS.imgPlaceHolder} alt=\"\" />\n                    :\n                    <video controls>\n                      <source src={formik.values.media_url} />\n                    </video>\n                }\n              </div>\n              <div className=\"input-video\">\n                <input onChange={onChangeVideo} hidden type=\"file\" accept={accept_video} id='video' />\n                <label htmlFor=\"video\" className='btn btn-primary btn-up-img'>\n                  <i className=\"bi bi-arrow-bar-up\"></i>\n                </label>\n                <input\n                  onChange={formik.handleChange} name='media_url' value={formik.values.media_url}\n                  type=\"text\" className='form-control form-control-solid mt-4'\n                  placeholder='Hoặc video url...' />\n              </div>\n            </div>\n            <div className=\"video-right\">\n              <div className=\"required form-label\">Image thumbnail</div>\n              <div className=\"drag-image\">\n                <img src={formik.values.image_thumb || IMGS.imgPlaceHolder} alt=\"\" />\n              </div>\n              <div className=\"input-img\">\n                <input onChange={onChangeThumb} hidden type=\"file\" accept={accept_image} id='up-img' />\n                <label htmlFor=\"up-img\" className='btn btn-primary btn-up-img'>\n                  <i className=\"bi bi-arrow-bar-up\"></i>\n                </label>\n                <input\n                  onChange={formik.handleChange} value={formik.values.image_thumb} name='image_thumb'\n                  type=\"text\" className='form-control form-control-solid mt-4'\n                  placeholder='Hoặc image url...'\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col mt-4\">\n            <div className=\"required form-label\">Tiêu đề</div>\n            <input\n              type=\"text\" onChange={formik.handleChange} value={formik.values.title} name=\"title\"\n              className=\"form-control form-control-solid\" placeholder='Tiêu đề'\n            />\n          </div>\n          <div className=\"col mt-4\">\n            <div className=\"required form-label\">Nội dung</div>\n            <input\n              type=\"text\" onChange={formik.handleChange} value={formik.values.content} name=\"content\"\n              className=\"form-control form-control-solid\" placeholder='Nội dung'\n            />\n          </div>\n          <div className=\"col mt-4\">\n            <div className=\"required form-label\">Link tiktok</div>\n            <input\n              type=\"text\" onChange={formik.handleChange} value={formik.values.trend_url} name=\"trend_url\"\n              className=\"form-control form-control-solid\" placeholder='Link tiktok'\n            />\n          </div>\n          <div className='mt-4'>\n            <SelectionOrg\n              organization_id={data?.context?.organization_id} origin={organization}\n              setOrigin={setOrganization}\n            />\n            <div className=\"mt-4\">\n              <SelectService\n                orgsChoose={organization ? [organization] : []}\n                values={services}\n                setValues={setServices}\n              />\n            </div>\n          </div>\n          <div className=\"d-flex justify-content-end mt-8\">\n            {\n              params.id &&\n              <LoadingButton style={{ marginRight: '8px' }} onClick={() => refetch()} loading={isRefetching} type='button'\n                variant='contained' color='primary' size='large' >\n                Khôi phục\n              </LoadingButton>\n            }\n            <LoadingButton loading={isLoadPost} type='submit' variant='contained' color='success' size='large' >\n              {!params.id ? 'Tạo mới' : 'Lưu thay đổi'}\n            </LoadingButton>\n          </div>\n        </form>\n      </div>\n    </>\n  )\n}\n\nexport default TrendForm","import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    title: string\n    element?: JSX.Element\n}\n\nfunction TitlePage(props: IProps) {\n    const { title, element } = props;\n    return (\n        <div className='toolbar' id='kt_toolbar'>\n            <div id=\"kt_toolbar_container\" className='container-fluid d-flex flex-stack'>\n                <h1 className='d-flex align-items-center text-dark fw-bolder my-1 fs-3'>\n                    {title}\n                </h1>\n                {element}\n            </div>\n        </div>\n    );\n}\n\nexport default TitlePage;"],"names":["SelectService","_ref","_services$data$map$fl","_services$data","orgsChoose","values","setValues","onChangeService","refBox","useRef","selected_id","map","i","id","services","setServices","useState","data","load","onTriggerBox","type","_refBox$current2","_refBox$current2$clas","_refBox$current","_refBox$current$class","length","current","classList","add","remove","window","addEventListener","debounceDropDownServices","useCallback","debounce","nextValue","async","keyword","servicesSearch","org","_org","res","orgApi","getServicesByOrg","org_id","newValues","context","push","getServicesByOrgs","list","flat","onSelect","item","iIndex","findIndex","filter","prev","_jsxs","className","children","_jsx","onClick","e","stopPropagation","Chip","label","service_name","formatPrice","price","onDelete","size","color","avatar","Avatar","src","image_url","ref","CircularProgress","onChange","target","value","placeholder","Boolean","index","style","includes","backgroundColor","onError","onErrorImg","alt","_data$context","params","useParams","resultLoad","noti","onCloseNoti","useMessage","handlePostMedia","handlePostThumb","usePostMedia","organization","setOrganization","isLoading","mutate","isLoadPost","useMutation","mutationFn","body","request3rdApi","putTrend","postTrend","onSuccess","message","errors","_err$request","request","status","formik","useFormik","initialValues","media_url","image_thumb","title","content","trend_url","onSubmit","organization_id","refetch","isRefetching","useQuery","queryKey","queryFn","trend","enabled","ser","setFieldValue","_Fragment","AppSnack","severity","open","openAlert","close","TitlePage","handleSubmit","IMGS","imgPlaceHolder","controls","callBack","_data$","original_url","version","resetOriginalResult","hidden","accept","accept_video","htmlFor","handleChange","name","_data$2","accept_image","SelectionOrg","origin","setOrigin","LoadingButton","marginRight","loading","variant","props","element"],"sourceRoot":""}