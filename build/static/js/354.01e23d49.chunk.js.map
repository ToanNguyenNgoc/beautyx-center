{"version":3,"file":"static/js/354.01e23d49.chunk.js","mappings":"6WAgXA,QAzVA,WACE,MAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,MACd,gBAAEC,EAAe,UAAEC,IAAcC,EAAAA,EAAAA,OAC/BF,gBAAiBG,EAAqBF,UAAWG,IAAuBF,EAAAA,EAAAA,OAC1E,WAAEG,EAAU,KAAEC,EAAI,YAAEC,IAAgBC,EAAAA,EAAAA,OACpC,YAAEC,EAAaR,UAAWS,IAAoBC,EAAAA,EAAAA,aAAY,CAC9DC,WAAaC,GAA2Bf,EAAOgB,GAAKC,EAAAA,GAAaC,IAAIlB,EAAOgB,GAAID,GAAQE,EAAAA,GAAaE,KAAKJ,GAC1GK,UAAWA,KACTb,EAAW,CACTc,QAASrB,EAAOgB,GAAK,gDAAkC,+CACvDM,MAAO,YAETC,YAAW,IAAMzB,GAAU,IAAI,KAAK,EAEtC0B,QAAUC,IAAiB,IAADC,EAExBnB,EAAW,CACTe,MAAO,QACPD,QAAS,8CAA4B,OAH3BI,QAG2B,IAH3BA,GAGoC,QAATC,EAH3BD,EAG6BE,eAAO,IAAAD,OAAT,EAAHA,EAAcE,UAChD,IAGAC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,QAAS,GACTC,UAAW,GACXC,mBAAeC,EACfC,cAAe,GACfC,wBAAoBF,EACpBG,UAAU,EACVC,WAAYC,MAASC,OAAO,uBAC5BC,WAAYF,MAASC,OAAO,uBAC5BE,UAAW,GACXC,aAAc,GACdC,SAAU,EAEVC,IAAK,GACLC,MAAO,GACP1B,MAAO,GACP2B,SAAU,IAEZC,iBAAkBC,EAAAA,GAAW,CAC3BnB,KAAMmB,EAAAA,KAAaC,SAAS,uCAC5BlB,UAAWiB,EAAAA,KAAaC,SAAS,uCAEnCC,SAAUC,UACR,MAAM,IAAEP,EAAG,MAAEC,EAAK,SAAEC,EAAQ,MAAE3B,GAAUiC,EAClCxC,GAAOyC,EAAAA,EAAAA,QAAO,IACfD,EACHV,aAAcU,EAAOV,aAAaY,KAAKC,GAAmBA,EAAE1C,KAC5D4B,UAAWW,EAAOX,UAAUa,KAAKC,GAAoBA,EAAE1C,KACvDiB,QAASsB,EAAOT,SAAW,EAAIa,KAAKC,UAAU,CAAEb,MAAKC,QAAOC,WAAU3B,UAAWiC,EAAOtB,SACvF4B,EAAAA,gBACelD,EAAY,IAAKI,EAAMwB,SAAUgB,EAAOhB,SAAW,EAAI,MAEvEV,EAAOiC,cAAc,qBAAiB1B,GACtCP,EAAOiC,cAAc,0BAAsB1B,GAC7C,KAGE,QAAE2B,EAAO,WAAEC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,SAAU,CAACC,EAAAA,GAAOC,UAAWpE,EAAOgB,IACpCqD,QAASA,IAAMpD,EAAAA,GAAaqD,UAAUtE,EAAOgB,IAC7CuD,UAASvE,EAAOgB,GAChBI,UAAYoD,IACV3C,EAAOiC,cAAc,WAAsC,IAA1BU,EAAKC,QAAQlC,UAC9CV,EAAOiC,cAAc,OAAQU,EAAKC,QAAQzC,MAC1CH,EAAOiC,cAAc,UAAWU,EAAKC,QAAQxC,SAC7CJ,EAAOiC,cAAc,YAAaU,EAAKC,QAAQvC,WAC/CL,EAAOiC,cAAc,gBAAiBU,EAAKC,QAAQpC,eACnDR,EAAOiC,cAAc,aAAcU,EAAKC,QAAQjC,YAChDX,EAAOiC,cAAc,aAAcU,EAAKC,QAAQ9B,YAChDd,EAAOiC,cAAc,eAAgBU,EAAKC,QAAQ5B,cAClDhB,EAAOiC,cAAc,YAAaU,EAAKC,QAAQ7B,WAC/Cf,EAAOiC,cAAc,WAAYU,EAAKC,QAAQ3B,UAE9C,IACE,MAAM,IAAEC,EAAG,MAAEC,EAAK,SAAEC,EAAQ,MAAE3B,GAAUqC,KAAKe,MAAMF,EAAKC,QAAQxC,SAChEJ,EAAOiC,cAAc,MAAOf,GAC5BlB,EAAOiC,cAAc,QAASd,GAC9BnB,EAAOiC,cAAc,WAAYb,GACjCpB,EAAOiC,cAAc,QAASxC,EAChC,CAAE,MAAOqD,GAAS,KAmCtB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CACPC,SAAUzE,EAAKc,MACfD,QAASb,EAAKa,QACd6D,KAAM1E,EAAK2E,UACXC,MAAO3E,KAETsE,EAAAA,EAAAA,KAACM,EAAAA,EAAS,CAACC,MAAOtF,EAAOgB,GAAK,+BAAuB,iCACrD+D,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,gCAAgCvE,GAAG,UAAS8D,UACzDC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,iBAAgBT,UAC7BF,EAAAA,EAAAA,MAAA,QAAMY,aAAa,MAAMnC,SAAUxB,EAAO4D,aAAcF,UAAU,OAAMT,SAAA,EACtEF,EAAAA,EAAAA,MAAA,OAAKW,UAAU,yCAAwCT,SAAA,EACrDC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,YAAWT,UACxBC,EAAAA,EAAAA,KAACW,EAAAA,GAAO,CACNC,MAAO9D,EAAO0B,OAAOhB,SACrBqD,SAAWC,GAAMhE,EAAOiC,cAAc,WAAY+B,EAAEC,OAAOC,SAC3DC,MAAM,gBAGVjB,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,YAAWT,UACxBC,EAAAA,EAAAA,KAACW,EAAAA,GAAO,CACNC,MAAO9D,EAAO0B,OAAOT,SAAW,EAChC8C,SAAWC,GAAMhE,EAAOiC,cAAc,WAAY+B,EAAEC,OAAOC,SAAW,EAAI,GAC1EC,MAAM,sCAKVnE,EAAO0B,OAAOT,SAAW,IACzB8B,EAAAA,EAAAA,MAAA,OAAKqB,MAAO,CAAEC,OAAQ,+BAAgCC,QAAS,EAAGC,aAAc,EAAGC,OAAQ,WAAYvB,SAAA,EACrGC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,sBAAqBT,SAAC,kCACrCF,EAAAA,EAAAA,MAAA,OAAKW,UAAU,iCAAgCT,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,OAAKW,UAAU,OAAOU,MAAO,CAAEK,aAAc,GAAIxB,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,sBAAqBT,SAAC,kBACrCC,EAAAA,EAAAA,KAAA,SACEwB,KAAK,OACLZ,MAAO9D,EAAO0B,OAAOR,IACrB6C,SAAU/D,EAAO2E,aACjBxE,KAAK,MACLuD,UAAU,4CACVkB,YAAY,eAGhB7B,EAAAA,EAAAA,MAAA,OAAKW,UAAU,OAAOU,MAAO,CAAES,YAAa,IAAK5B,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,sBAAqBT,SAAC,WACrCC,EAAAA,EAAAA,KAAA,SACEwB,KAAK,OACLZ,MAAO9D,EAAO0B,OAAOP,MACrB4C,SAAU/D,EAAO2E,aACjBxE,KAAK,QACLuD,UAAU,4CACVkB,YAAY,iBAIlB7B,EAAAA,EAAAA,MAAA,OAAKW,UAAU,iCAAgCT,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,OAAKW,UAAU,OAAOU,MAAO,CAAEK,aAAc,GAAIxB,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,sBAAqBT,SAAC,cACrCC,EAAAA,EAAAA,KAAA,SACEwB,KAAK,OACLZ,MAAO9D,EAAO0B,OAAON,SACrB2C,SAAU/D,EAAO2E,aACjBxE,KAAK,WACLuD,UAAU,4CACVkB,YAAY,oBAGhB7B,EAAAA,EAAAA,MAAA,OAAKW,UAAU,OAAOU,MAAO,CAAES,YAAa,IAAK5B,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,sBAAqBT,SAAC,WACrCC,EAAAA,EAAAA,KAAA,SACEwB,KAAK,OACLZ,MAAO9D,EAAO0B,OAAOjC,MACrBsE,SAAU/D,EAAO2E,aACjBxE,KAAK,QACLuD,UAAU,4CACVkB,YAAY,oBAMtB7B,EAAAA,EAAAA,MAAA,OAAKW,UAAU,SAAQT,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,sBAAqBT,SAAC,sBACrCC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,cAAaT,UAC1BC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAY,CACXpB,UAAU,kBACVU,MAAO,CAAEW,MAAO,QAChBC,UAAU,EACVL,aAzHWM,IACzBjF,EAAOiC,cAAc,YAAa,IAMlC5D,EAAgB,CACd2F,EANc,CACdC,OAAQ,CACNiB,MAAO,CAACD,KAKVE,QAAAA,CAASxC,GAAO,IAADyC,EAAAC,EAAAC,EACbtF,EAAOiC,cAAc,YAAkC,QAAvBmD,EAAS,QAATC,EAAE1C,EAAK,UAAE,IAAA0C,OAAA,EAAPA,EAASE,oBAAY,IAAAH,EAAAA,EAAI,IAC3DpF,EAAOiC,cAAc,gBAAwB,QAATqD,EAAE3C,EAAK,UAAE,IAAA2C,OAAA,EAAPA,EAASE,SACjD,EACAC,QAAS,SACT,EA4GYtF,KAAK,OACLuF,MAAOC,EAAAA,GACP1C,UACEF,EAAAA,EAAAA,MAAA,OAAKW,UAAU,mBAAkBT,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAK0C,IAAiC,KAA5B5F,EAAO0B,OAAOrB,UAAmBL,EAAO0B,OAAOrB,UAAYwF,EAAAA,EAAKC,eAAgBC,IAAI,GAAGrC,UAAU,gBAEzGpF,IACAyE,EAAAA,EAAAA,MAAA,OAAKW,UAAU,cAAaT,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,wBACNC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAgB,OAIS,KAA5BhG,EAAO0B,OAAOrB,YACd6C,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,cAAaT,UAC1BC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,0HAOlBC,EAAAA,EAAAA,KAAA,SAIEwB,KAAK,OACLvE,KAAK,YACLuD,UAAU,4CACVkB,YAAY,wCAGZ5E,EAAOJ,OAAOS,WAAaL,EAAOiG,QAAQ5F,YAC1C6C,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,cAAaT,SAAEjD,EAAOJ,OAAOS,gBAGjD6C,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,sBAAqBT,SAAC,eACrCC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,cAAaT,UAC1BC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAY,CACXpB,UAAU,kBACVU,MAAO,CAAEW,MAAO,QAChBC,UAAU,EACVL,aApJiBM,IAC7BjF,EAAOiC,cAAc,GAAI,IAMzBzD,EAAoB,CAClBwF,EANc,CACdC,OAAQ,CACNiB,MAAO,CAACD,KAKVE,QAAAA,CAASxC,GAAO,IAADuD,EAAAC,EAAAC,EACbpG,EAAOiC,cAAc,gBAAsC,QAAvBiE,EAAS,QAATC,EAAExD,EAAK,UAAE,IAAAwD,OAAA,EAAPA,EAASZ,oBAAY,IAAAW,EAAAA,EAAI,IAC/DlG,EAAOiC,cAAc,qBAA6B,QAATmE,EAAEzD,EAAK,UAAE,IAAAyD,OAAA,EAAPA,EAASZ,SACtD,EACAC,QAAS,SACT,EAuIUtF,KAAK,YACLuF,MAAOC,EAAAA,GACP1C,UACEF,EAAAA,EAAAA,MAAA,OAAKW,UAAU,mBAAkBT,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAK0C,IAAqC,KAAhC5F,EAAO0B,OAAOlB,cAAuBR,EAAO0B,OAAOlB,cAAgBqF,EAAAA,EAAKC,eAAgBC,IAAI,GAAGrC,UAAU,gBAEjF,KAAhC1D,EAAO0B,OAAOlB,gBACduC,EAAAA,EAAAA,MAAA,OAAKW,UAAU,cAAaT,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAAD,SACGxE,EAAqB,qBAAa,gHAEpCA,IAAsByE,EAAAA,EAAAA,KAACmD,EAAAA,EAAc,eAOlDnD,EAAAA,EAAAA,KAAA,SACEY,MAAO9D,EAAO0B,OAAOlB,cACrBuD,SAAU/D,EAAO2E,aAEjBD,KAAK,OACLvE,KAAK,gBACLuD,UAAU,4CACVkB,YAAY,yCAEd7B,EAAAA,EAAAA,MAAA,OAAKW,UAAU,SAAQT,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,sBAAqBT,SAAC,sBACrCC,EAAAA,EAAAA,KAAA,SACEY,MAAO9D,EAAO0B,OAAOvB,KACrB4D,SAAU/D,EAAO2E,aACjBD,KAAK,OACLvE,KAAK,OACLuD,UAAU,4CACVkB,YAAY,yBAGZ5E,EAAOJ,OAAOO,MAAQH,EAAOiG,QAAQ9F,OACrC+C,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,cAAaT,SAC1BjD,EAAOJ,OAAOO,WAIrB4C,EAAAA,EAAAA,MAAA,OAAKW,UAAU,SAAQT,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,aAAYT,SAAC,mBAC5BC,EAAAA,EAAAA,KAACoD,IAAU,CAACC,MAAM,OAAOzC,MAAO9D,EAAO0B,OAAOtB,QAAS2D,SAAWC,GAAMhE,EAAOiC,cAAc,UAAW+B,SAE1Gd,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,SAAQT,UACrBC,EAAAA,EAAAA,KAACsD,EAAAA,GAAgB,CACfjF,UAAQ,EAERkF,UAAW,IAAIC,KAAK1G,EAAO0B,OAAOf,YAClCgG,QAAS,IAAID,KAAK1G,EAAO0B,OAAOZ,YAChCiD,SAAWC,IACThE,EAAOiC,cAAc,aAAcrB,IAAOoD,EAAE4C,UAAUH,WAAW5F,OAAO,wBACxEb,EAAOiC,cAAc,aAAcrB,IAAOoD,EAAE4C,UAAUD,SAAS9F,OAAO,uBAAuB,OAInGqC,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,cAAaT,UAC1BC,EAAAA,EAAAA,KAAC2D,EAAAA,GAAoB,CACnBC,YAAa9G,EAAO0B,OAAOV,aAC3B+F,oBAAsB/C,GAAMhE,EAAOiC,cAAc,eAAgB+B,QAGrEd,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,cAAaT,UAC1BC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAkB,CACjBC,WAAW,EACXlG,UAAWf,EAAO0B,OAAOX,UACzBmG,kBAAoBlD,GAAMhE,EAAOiC,cAAc,YAAa+B,QAGhEjB,EAAAA,EAAAA,MAAA,OAAKW,UAAU,kCAAiCT,SAAA,CAE5C9E,EAAOgB,KACP+D,EAAAA,EAAAA,KAACiE,EAAAA,EAAa,CAAC/C,MAAO,CAAEgD,YAAa,OAASC,QAASlF,EACrDuC,KAAK,SAAS4C,KAAK,QAAQ7H,MAAM,UAAU8H,QAAQ,YAAYC,QAASA,IAAMtF,IAAUe,SACzF,uBAIHC,EAAAA,EAAAA,KAACiE,EAAAA,EAAa,CAACE,QAAStI,EAAiB2F,KAAK,SAAS4C,KAAK,QAAQ7H,MAAM,UAAU8H,QAAQ,YAAWtE,SACpG9E,EAAOgB,GAAK,2BAAmB,wCAQhD,C","sources":["app/pages/promotions/module/promotion-form.tsx"],"sourcesContent":["import TitlePage from \"components/TitlePage\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { FileUploader } from \"react-drag-drop-files\";\nimport { FILE_IMG_TYPE } from \"app/util\";\nimport { IMGS } from \"_metronic/assets/imgs/imgs\";\nimport { AppSnack, SelectionDiscounts, SelectionProductable, XDateRangePicker, XSwitch } from \"components\";\nimport { useFormik } from \"formik\";\nimport { LoadingButton } from \"@mui/lab\";\nimport moment from \"moment\";\nimport { useMessage, usePostMedia } from \"app/hooks\";\nimport { CircularProgress, LinearProgress } from \"@mui/material\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { QR_KEY } from \"common\";\nimport { promotionApi } from \"app/api\";\nimport { ReqPromotionBody } from \"@types\";\nimport { IDiscountPar, Productable } from \"app/interface\";\nimport { AxiosError } from \"axios\";\nimport * as Yup from \"yup\"\nimport '../style.scss'\nimport { identity, pickBy } from \"lodash\";\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\n\nfunction PromotionForm() {\n  const navigate = useNavigate()\n  const params: any = useParams()\n  const { handlePostMedia, isLoading } = usePostMedia()\n  const { handlePostMedia: handlePostThumbnail, isLoading: isLoadingThumbnail } = usePostMedia()\n  const { resultLoad, noti, onCloseNoti } = useMessage()\n  const { mutateAsync, isLoading: isLoadingMutate } = useMutation({\n    mutationFn: (body: ReqPromotionBody) => params.id ? promotionApi.put(params.id, body) : promotionApi.post(body),\n    onSuccess: () => {\n      resultLoad({\n        message: params.id ? 'Cập nhật promotion thành công' : 'Tạo mới promotion thành công',\n        color: 'success'\n      })\n      setTimeout(() => navigate(-1), 1500)\n    },\n    onError: (errors: any) => {\n      const err = errors as AxiosError\n      resultLoad({\n        color: 'error',\n        message: `Có lỗi xảy ra. Mã lỗi ${err?.request?.status}`\n      })\n    }\n  })\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      content: '',\n      media_url: '',\n      main_media_id: undefined,\n      thumbnail_url: '',\n      thumbnail_media_id: undefined,\n      is_popup: false,\n      valid_from: moment().format('YYYY-MM-DD HH:mm:ss'),\n      valid_util: moment().format('YYYY-MM-DD HH:mm:ss'),\n      discounts: [],\n      productables: [],\n      priority: 0,\n\n      url: '',\n      token: '',\n      color: '',\n      platform: ''\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required('Nhập tên của promotion'),\n      media_url: Yup.string().required('Upload hình của promotion')\n    }),\n    onSubmit: async (values) => {\n      const { url, token, platform, color } = values\n      const body = pickBy({\n        ...values,\n        productables: values.productables.map((i: Productable) => i.id),\n        discounts: values.discounts.map((i: IDiscountPar) => i.id),\n        content: values.priority < 0 ? JSON.stringify({ url, token, platform, color }) : values.content,\n      }, identity)\n      const res = await mutateAsync({ ...body, is_popup: values.is_popup ? 1 : 0, })\n      if (res) {\n        formik.setFieldValue('main_media_id', undefined)\n        formik.setFieldValue('thumbnail_media_id', undefined)\n      }\n    }\n  })\n  const { refetch, isFetching } = useQuery({\n    queryKey: [QR_KEY.PROMOTION, params.id],\n    queryFn: () => promotionApi.getDetail(params.id),\n    enabled: params.id ? true : false,\n    onSuccess: (data) => {\n      formik.setFieldValue('is_popup', data.context.is_popup === 1 ? true : false)\n      formik.setFieldValue('name', data.context.name)\n      formik.setFieldValue('content', data.context.content)\n      formik.setFieldValue('media_url', data.context.media_url)\n      formik.setFieldValue('thumbnail_url', data.context.thumbnail_url)\n      formik.setFieldValue('valid_from', data.context.valid_from)\n      formik.setFieldValue('valid_util', data.context.valid_util)\n      formik.setFieldValue('productables', data.context.productables)\n      formik.setFieldValue('discounts', data.context.discounts)\n      formik.setFieldValue('priority', data.context.priority)\n\n      try {\n        const { url, token, platform, color } = JSON.parse(data.context.content)\n        formik.setFieldValue('url', url)\n        formik.setFieldValue('token', token)\n        formik.setFieldValue('platform', platform)\n        formik.setFieldValue('color', color)\n      } catch (error) { }\n    }\n  })\n  const handleChangeMedia = (file: File) => {\n    formik.setFieldValue('media_url', '')\n    const eF: any = {\n      target: {\n        files: [file]\n      }\n    }\n    handlePostMedia({\n      e: eF,\n      callBack(data) {\n        formik.setFieldValue('media_url', data[0]?.original_url ?? '')\n        formik.setFieldValue('main_media_id', data[0]?.model_id)\n      },\n      version: 'myspa'\n    })\n  }\n  const handleChangeThumbnail = (file: File) => {\n    formik.setFieldValue('', '')\n    const eF: any = {\n      target: {\n        files: [file]\n      }\n    }\n    handlePostThumbnail({\n      e: eF,\n      callBack(data) {\n        formik.setFieldValue('thumbnail_url', data[0]?.original_url ?? '')\n        formik.setFieldValue('thumbnail_media_id', data[0]?.model_id)\n      },\n      version: 'myspa'\n    })\n  }\n  return (\n    <>\n      <AppSnack\n        severity={noti.color}\n        message={noti.message}\n        open={noti.openAlert}\n        close={onCloseNoti}\n      />\n      <TitlePage title={params.id ? 'Cập nhật promotion' : 'Tạo mới promotion'} />\n      <div className='post d-flex flex-column-fluid' id=\"kt_post\">\n        <div className=\"promotion-form\">\n          <form autoComplete=\"off\" onSubmit={formik.handleSubmit} className=\"form\">\n            <div className=\"flex-row align-items-center input-wrap\">\n              <div className=\"wrap-item\">\n                <XSwitch\n                  value={formik.values.is_popup}\n                  onChange={(e) => formik.setFieldValue('is_popup', e.target.checked)}\n                  label='Is Popup'\n                />\n              </div>\n              <div className=\"wrap-item\">\n                <XSwitch\n                  value={formik.values.priority < 0 ? true : false}\n                  onChange={(e) => formik.setFieldValue('priority', e.target.checked ? -1 : 0)}\n                  label='Webview đối tác'\n                />\n              </div>\n            </div>\n            {\n              formik.values.priority < 0 &&\n              <div style={{ border: 'solid 1px var(--kt-gray-500)', padding: 6, borderRadius: 6, margin: '6px 0px' }}>\n                <div className=\"required form-label\">Cài đặt webview</div>\n                <div className=\"d-flex justify-content-between\">\n                  <div className=\"w-50\" style={{ paddingRight: 6 }}>\n                    <div className=\"required form-label\">Link webview</div>\n                    <input\n                      type=\"text\"\n                      value={formik.values.url}\n                      onChange={formik.handleChange}\n                      name=\"url\"\n                      className=\"form-control form-control-solid mt-4 mb-2\"\n                      placeholder=\"URL...\"\n                    />\n                  </div>\n                  <div className=\"w-50\" style={{ paddingLeft: 12 }}>\n                    <div className=\"required form-label\">Token</div>\n                    <input\n                      type=\"text\"\n                      value={formik.values.token}\n                      onChange={formik.handleChange}\n                      name=\"token\"\n                      className=\"form-control form-control-solid mt-4 mb-2\"\n                      placeholder=\"Token\"\n                    />\n                  </div>\n                </div>\n                <div className=\"d-flex justify-content-between\">\n                  <div className=\"w-50\" style={{ paddingRight: 6 }}>\n                    <div className=\"required form-label\">Platform</div>\n                    <input\n                      type=\"text\"\n                      value={formik.values.platform}\n                      onChange={formik.handleChange}\n                      name=\"platform\"\n                      className=\"form-control form-control-solid mt-4 mb-2\"\n                      placeholder=\"Platform...\"\n                    />\n                  </div>\n                  <div className=\"w-50\" style={{ paddingLeft: 12 }}>\n                    <div className=\"required form-label\">Color</div>\n                    <input\n                      type=\"text\"\n                      value={formik.values.color}\n                      onChange={formik.handleChange}\n                      name=\"color\"\n                      className=\"form-control form-control-solid mt-4 mb-2\"\n                      placeholder=\"color\"\n                    />\n                  </div>\n                </div>\n              </div>\n            }\n            <div className=\"column\">\n              <div className=\"required form-label\">Hình ảnh</div>\n              <div className=\"drag-banner\">\n                <FileUploader\n                  className=\"form-input-file\"\n                  style={{ width: '100%' }}\n                  multiple={false}\n                  handleChange={handleChangeMedia}\n                  name=\"file\"\n                  types={FILE_IMG_TYPE}\n                  children={\n                    <div className='banner-form__img'>\n                      <img src={formik.values.media_url !== \"\" ? formik.values.media_url : IMGS.imgPlaceHolder} alt=\"\" className=\"image-value\" />\n                      {\n                        isLoading &&\n                        <div className=\"placeholder\">\n                          <span>Đang tải</span>\n                          <CircularProgress />\n                        </div>\n                      }\n                      {\n                        formik.values.media_url === \"\" &&\n                        <div className=\"placeholder\">\n                          <span>Kéo thả hình ảnh vào đây hoặc Click để chọn hình ảnh</span>\n                        </div>\n                      }\n                    </div>\n                  }\n                />\n              </div>\n              <input\n                // value={formik.values.media_url}\n                // onChange={formik.handleChange}\n                // readOnly\n                type=\"text\"\n                name=\"image_url\"\n                className=\"form-control form-control-solid mt-4 mb-2\"\n                placeholder=\"Hoặc link hình ảnh....\"\n              />\n              {\n                formik.errors.media_url && formik.touched.media_url &&\n                <span className=\"text-danger\">{formik.errors.media_url}</span>\n              }\n            </div>\n            <div className=\"required form-label\">Thumbnail</div>\n            <div className=\"drag-banner\">\n              <FileUploader\n                className=\"form-input-file\"\n                style={{ width: '100%' }}\n                multiple={false}\n                handleChange={handleChangeThumbnail}\n                name=\"thumbnail\"\n                types={FILE_IMG_TYPE}\n                children={\n                  <div className='banner-form__img'>\n                    <img src={formik.values.thumbnail_url !== \"\" ? formik.values.thumbnail_url : IMGS.imgPlaceHolder} alt=\"\" className=\"image-value\" />\n                    {\n                      formik.values.thumbnail_url === \"\" &&\n                      <div className=\"placeholder\">\n                        <span>\n                          {isLoadingThumbnail ? 'Đang tải' : 'Kéo thả hình ảnh vào đây hoặc Click để chọn hình ảnh'}\n                        </span>\n                        {isLoadingThumbnail && <LinearProgress />}\n                      </div>\n                    }\n                  </div>\n                }\n              />\n            </div>\n            <input\n              value={formik.values.thumbnail_url}\n              onChange={formik.handleChange}\n              // readOnly\n              type=\"text\"\n              name=\"thumbnail_url\"\n              className=\"form-control form-control-solid mt-4 mb-2\"\n              placeholder=\"Hoặc link hình ảnh....\"\n            />\n            <div className=\"column\">\n              <div className=\"required form-label\">Tên promotion</div>\n              <input\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                type=\"text\"\n                name=\"name\"\n                className=\"form-control form-control-solid mt-4 mb-2\"\n                placeholder=\"Tên promotion....\"\n              />\n              {\n                formik.errors.name && formik.touched.name &&\n                <span className='text-danger'>\n                  {formik.errors.name}\n                </span>\n              }\n            </div>\n            <div className=\"column\">\n              <div className=\"form-label\">Mô tả</div>\n              <ReactQuill theme=\"snow\" value={formik.values.content} onChange={(e) => formik.setFieldValue('content', e)} />\n            </div>\n            <div className=\"column\">\n              <XDateRangePicker\n                required\n                // minDate={new Date()}\n                startDate={new Date(formik.values.valid_from)}\n                endDate={new Date(formik.values.valid_util)}\n                onChange={(e) => {\n                  formik.setFieldValue('valid_from', moment(e.selection.startDate).format('YYYY-MM-DD HH:mm:ss'))\n                  formik.setFieldValue('valid_util', moment(e.selection.endDate).format('YYYY-MM-DD HH:mm:ss'))\n                }}\n              />\n            </div>\n            <div className=\"column mt-6\">\n              <SelectionProductable\n                productable={formik.values.productables}\n                onChangeProductable={(e) => formik.setFieldValue('productables', e)}\n              />\n            </div>\n            <div className=\"column mt-6\">\n              <SelectionDiscounts\n                filterAll={false}\n                discounts={formik.values.discounts}\n                onChangeDiscounts={(e) => formik.setFieldValue('discounts', e)}\n              />\n            </div>\n            <div className=\"d-flex justify-content-end mt-8\">\n              {\n                params.id &&\n                <LoadingButton style={{ marginRight: '8px' }} loading={isFetching}\n                  type=\"submit\" size=\"large\" color=\"inherit\" variant=\"contained\" onClick={() => refetch()}\n                >\n                  Khôi phục\n                </LoadingButton>\n              }\n              <LoadingButton loading={isLoadingMutate} type=\"submit\" size=\"large\" color=\"success\" variant=\"contained\" >\n                {params.id ? 'Cập nhật Promo' : 'Tạo mới Promo'}\n              </LoadingButton>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default PromotionForm;"],"names":["navigate","useNavigate","params","useParams","handlePostMedia","isLoading","usePostMedia","handlePostThumbnail","isLoadingThumbnail","resultLoad","noti","onCloseNoti","useMessage","mutateAsync","isLoadingMutate","useMutation","mutationFn","body","id","promotionApi","put","post","onSuccess","message","color","setTimeout","onError","errors","_err$request","request","status","formik","useFormik","initialValues","name","content","media_url","main_media_id","undefined","thumbnail_url","thumbnail_media_id","is_popup","valid_from","moment","format","valid_util","discounts","productables","priority","url","token","platform","validationSchema","Yup","required","onSubmit","async","values","pickBy","map","i","JSON","stringify","identity","setFieldValue","refetch","isFetching","useQuery","queryKey","QR_KEY","PROMOTION","queryFn","getDetail","enabled","data","context","parse","error","_jsxs","_Fragment","children","_jsx","AppSnack","severity","open","openAlert","close","TitlePage","title","className","autoComplete","handleSubmit","XSwitch","value","onChange","e","target","checked","label","style","border","padding","borderRadius","margin","paddingRight","type","handleChange","placeholder","paddingLeft","FileUploader","width","multiple","file","files","callBack","_data$0$original_url","_data$","_data$2","original_url","model_id","version","types","FILE_IMG_TYPE","src","IMGS","imgPlaceHolder","alt","CircularProgress","touched","_data$0$original_url2","_data$3","_data$4","LinearProgress","ReactQuill","theme","XDateRangePicker","startDate","Date","endDate","selection","SelectionProductable","productable","onChangeProductable","SelectionDiscounts","filterAll","onChangeDiscounts","LoadingButton","marginRight","loading","size","variant","onClick"],"sourceRoot":""}