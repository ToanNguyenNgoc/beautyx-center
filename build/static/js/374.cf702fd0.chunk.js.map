{"version":3,"file":"static/js/374.cf702fd0.chunk.js","mappings":"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","sources":["app/pages/customers/index.tsx","components/TitlePage/index.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { Avatar, FormControl, MenuItem, Select, SelectChangeEvent } from \"@mui/material\";\nimport { KTSVG } from \"_metronic/helpers\";\nimport { statisticApi } from \"app/api\";\nimport { PLAT_FORM_ARR, formatDate, getRangeOfDates } from \"app/util\";\nimport { QR_CACHE, QR_KEY } from \"common\";\nimport { AppSnack, FlatFormOrder, PageCircularProgress, XDateRangePicker, XPagination } from \"components\";\nimport TitlePage from \"components/TitlePage\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport queryString from \"query-string\"\nimport { QrCustomer, ResponseList } from \"@types\";\nimport { FC, useEffect, useState } from \"react\";\nimport \"./style.scss\"\nimport { identity, pickBy } from \"lodash\";\nimport moment from \"moment\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Customer } from \"app/interface\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\"\nimport { useMessage } from \"app/hooks\";\n\nfunction Customers() {\n  const location = useLocation()\n  const navigate = useNavigate()\n  const query = queryString.parse(location.search) as QrCustomer\n  const { data, isLoading } = useQuery({\n    queryKey: [QR_KEY.CUSTOMER, query],\n    queryFn: () => statisticApi.customers({\n      'page': query['page'],\n      'limit': 15,\n      'platform': query['platform'],\n      'sort': query['sort'] || '-created_at',\n      'from_date': query['from_date'],\n      'to_date': query['to_date']\n    }),\n    staleTime: QR_CACHE\n  })\n  const customers = data?.data || []\n  const onChangePage = (page: number) => {\n    const newQuery = {\n      ...query,\n      page: page\n    }\n    navigate({\n      pathname: location.pathname,\n      search: queryString.stringify(newQuery)\n    })\n  }\n  return (\n    <>\n      <TitlePage title=\"Danh sách khách hàng\" />\n      <div className={`card`}>\n        <div className='card-header border-0 pt-5'>\n          <h3 className='card-title align-items-start flex-column'>\n            <span className='card-label fw-bold fs-3 mb-1'>Customer Statistics</span>\n            <span className='text-muted mt-1 fw-semobold fs-7'>Số lượng:{data?.total} members</span>\n          </h3>\n        </div>\n        <Filter query={query} />\n        <div className=\"d-flex justify-content-end px-12\">\n          {data && <ExportFile data={data} qr={query} />}\n        </div>\n        <div className='card-body py-3'>\n          <div className='table-responsive'>\n            <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n              <thead>\n                <tr className='fw-bold text-muted'>\n                  <th className='min-w-150px'>Thông tin khách hàng</th>\n                  <th className='min-w-140px'>Số điện thoại</th>\n                  <th className='min-w-140px'>Nền tảng</th>\n                  <th className='min-w-120px'>Ngày đăng ký</th>\n                  <th className='min-w-100px text-end'>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  customers.map(item => (\n                    <tr key={item.id}>\n                      <td>\n                        <div className='d-flex align-items-center'>\n                          <div className='symbol symbol-45px me-5'>\n                            <Avatar src={item.avatar || item.fullname} alt={item.fullname} />\n                          </div>\n                          <div className='d-flex justify-content-start flex-column'>\n                            <span className='text-dark fw-bold fs-6'>\n                              {item.fullname}\n                            </span>\n                            <span className='fw-semobold text-muted d-block fs-7'>\n                              {item.email}\n                            </span>\n                          </div>\n                        </div>\n                      </td>\n                      <td>\n                        <a href={`tel:${item.telephone}`} className='text-dark fw-bold text-hover-primary d-block fs-6'>\n                          {item.telephone}\n                        </a>\n                      </td>\n                      <td>\n                        <FlatFormOrder platForm={item.platform} />\n                      </td>\n                      <td>\n                        <span className='text-muted fw-semobold text-muted d-block fs-7'>\n                          {formatDate(item.created_at)}\n                        </span>\n                      </td>\n                      <td>\n                        <div className='d-flex justify-content-end flex-shrink-0'>\n                          <Link\n                            to={'#'}\n                            className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n                          >\n                            <KTSVG\n                              path='/media/icons/duotune/general/gen019.svg'\n                              className='svg-icon-3'\n                            />\n                          </Link>\n                        </div>\n                      </td>\n                    </tr>\n                  ))\n                }\n              </tbody>\n            </table>\n            <PageCircularProgress loading={isLoading} />\n            <XPagination\n              totalPage={data?.last_page ?? 1}\n              onChangePage={onChangePage}\n              defaultPage={query['page'] ?? 1}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Customers;\n\nconst Filter: FC<{ query: QrCustomer }> = ({ query }) => {\n  const location = useLocation()\n  const navigate = useNavigate()\n  const sorts = [\n    { sort: '-created_at', title: 'Ngày đăng ký mới' },\n    { sort: 'created_at', title: 'Ngày đăng ký cũ' }\n  ]\n  const [rangeDate, setRangeDate] = useState({ form: query['from_date'], to: query['to_date'] })\n  const onChangePlatform = (e: SelectChangeEvent) => {\n    const newQuery = {\n      ...query,\n      'page': 1,\n      'platform': e.target.value !== \"\" ? e.target.value : \"\"\n    }\n    navigate({\n      pathname: location.pathname,\n      search: queryString.stringify(pickBy(newQuery, identity))\n    })\n  }\n  const onChangeSort = (e: SelectChangeEvent) => {\n    const newQuery: QrCustomer = {\n      ...query,\n      'sort': e.target.value,\n      'page': 1\n    }\n    navigate({\n      pathname: location.pathname,\n      search: queryString.stringify(newQuery)\n    })\n  }\n  const onApplyRangeDate = () => {\n    const newQuery: QrCustomer = {\n      ...query,\n      'page': 1,\n      'from_date': rangeDate.form,\n      'to_date': rangeDate.to\n    }\n    navigate({\n      pathname: location.pathname,\n      search: queryString.stringify(newQuery)\n    })\n  }\n  const onCancelRangeDate = () => {\n    const newQuery: QrCustomer = {\n      ...query,\n      'page': 1,\n      'from_date': undefined,\n      'to_date': undefined\n    }\n    setRangeDate({ form: undefined, to: undefined })\n    navigate({\n      pathname: location.pathname,\n      search: queryString.stringify(pickBy(newQuery, identity))\n    })\n  }\n  return (\n    <div className=\"d-flex justify-content-between filter-cnt\">\n      <div>\n        <label className=\"filter-row_label\">Tìm kiếm</label>\n        <input\n          // type=\"text\" onChange={onInputChange}\n          className=\"form-control form-control-solid py-2 px-6\"\n          placeholder=\"Tìm kiếm\"\n        />\n      </div>\n      <div className=\"filter-right\">\n        <div className=\"filter-row\">\n          <div className=\"filter-row_platform\">\n            <label className=\"filter-row_label\">Nền tảng</label>\n            <FormControl sx={{ m: 1, minWidth: 150 }} size=\"small\">\n              <Select\n                labelId=\"demo-select-small-label\"\n                id=\"demo-select-small\"\n                value={query['platform'] ?? ''}\n                onChange={onChangePlatform}\n              >\n                <MenuItem value=\"\">\n                  <em>Tất cả</em>\n                </MenuItem>\n                {\n                  PLAT_FORM_ARR.map(item => (\n                    <MenuItem key={item} value={item}>{item}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n          </div>\n          <div className=\"filter-row_platform\">\n            <label className=\"filter-row_label\">Sắp xếp theo</label>\n            <FormControl sx={{ m: 1, minWidth: 150 }} size=\"small\">\n              <Select\n                labelId=\"demo-select-small-label\"\n                id=\"demo-select-small\"\n                value={query.sort ?? sorts[0].sort}\n                onChange={onChangeSort}\n              >\n                {\n                  sorts.map(item => (\n                    <MenuItem key={item.sort} value={item.sort}>{item.title}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"filter-row_picker\">\n          <XDateRangePicker\n            showBot\n            init={(!rangeDate.form || !rangeDate.to)}\n            startDate={rangeDate.form ? new Date(rangeDate.form) : new Date()}\n            endDate={rangeDate.to ? new Date(rangeDate.to) : new Date()}\n            label=\"Thời gian đăng ký\"\n            onChange={(e) => setRangeDate({\n              form: moment(e.selection.startDate).format('YYYY-MM-DD HH:mm:ss'),\n              to: moment(e.selection.endDate).format('YYYY-MM-DD HH:mm:ss')\n            })}\n            onApply={onApplyRangeDate}\n            onCancel={onCancelRangeDate}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface ExportFileProps {\n  data: ResponseList<Customer[]>;\n  qr: QrCustomer;\n}\n\nconst ExportFile: FC<ExportFileProps> = ({ data, qr }) => {\n  const [customers, setCustomers] = useState<Customer[]>([])\n  const { resultLoad, noti, onCloseNoti } = useMessage()\n  const [isExport, setIsExport] = useState(false)\n  const { mutate, isLoading } = useMutation({\n    mutationFn: (page: number) => statisticApi.customers({\n      ...qr, 'page': page, 'limit': 15\n    }),\n    onSuccess: (res) => setCustomers(prev => [...prev, ...res.data])\n  })\n  const onExport = () => {\n    if(data.data.length === 0) return\n    if (!qr['from_date'] || !qr['to_date'])\n      return resultLoad({ message: 'Vui lòng chọn khoảng thời gian', color: 'warning' })\n    const dateRange = getRangeOfDates(\n      qr['from_date'] ? new Date(qr['from_date']) : new Date(),\n      qr['to_date'] ? new Date(qr['to_date']) : new Date()\n    )\n    if (dateRange.length > 31)\n      return resultLoad({ message: 'Xuất danh sách tối đa trong 30 ngày', color: 'warning' })\n    setIsExport(true)\n    for (var i = 1; i <= data?.last_page; i++) {\n      mutate(i)\n    }\n  }\n  useEffect(() => {\n    if (isExport && customers.length > 0 && customers.length === data?.total) {\n      onExportFile(customers).then(() => {\n        resultLoad({ message: 'Xuất File thành công', color: 'success' })\n        setCustomers([])\n        setIsExport(false)\n      })\n    }\n    if (customers.length === data?.total) setCustomers([])\n  }, [customers, data?.total])\n  return (\n    <>\n      <AppSnack\n        severity={noti.color}\n        message={noti.message}\n        open={noti.openAlert}\n        close={onCloseNoti}\n      />\n      <LoadingButton\n        color=\"success\"\n        size=\"medium\"\n        variant=\"contained\"\n        onClick={onExport}\n        type=\"button\"\n        loading={isLoading}\n      >\n        <i style={{ marginRight: '4px', color: 'var(--kt-white)' }} className=\"bi bi-download\"></i>\n        Xuất danh sách\n      </LoadingButton>\n    </>\n  )\n}\nconst onExportFile = (customers: Customer[]) => {\n  return new Promise((resolve, reject) => {\n    const fileType =\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n    const titleRow = ['#', 'ID', 'Họ và tên', 'Email', 'Số điện thoại', 'Nền tảng', 'Ngày đăng ký']; // Replace with your actual titles\n    const dataWithTitles = [\n      titleRow,\n      ...customers.map((item, i) => [i + 1, item.id, item.fullname, item.email, item.telephone, item.platform, item.created_at])\n    ];\n    const ws = XLSX.utils.aoa_to_sheet(dataWithTitles);\n    const columnWidths = [\n      { wch: 5 },\n      { wch: 10 },\n      { wch: 35 },\n      { wch: 25 },\n      { wch: 25 },\n      { wch: 25 },\n      { wch: 25 },\n    ];\n    ws['!cols'] = columnWidths;\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, `ds_khach_hang_${moment().format('DDHHmmss')}` + fileExtension);\n    resolve(true)\n  })\n}","import React from 'react';\nimport './style.scss'\n\ninterface IProps {\n    title: string\n    element?: JSX.Element\n}\n\nfunction TitlePage(props: IProps) {\n    const { title, element } = props;\n    return (\n        <div className='toolbar' id='kt_toolbar'>\n            <div id=\"kt_toolbar_container\" className='container-fluid d-flex flex-stack'>\n                <h1 className='d-flex align-items-center text-dark fw-bolder my-1 fs-3'>\n                    {title}\n                </h1>\n                {element}\n            </div>\n        </div>\n    );\n}\n\nexport default TitlePage;"],"names":["_data$last_page","_query$page","location","useLocation","navigate","useNavigate","query","queryString","search","data","isLoading","useQuery","queryKey","QR_KEY","CUSTOMER","queryFn","statisticApi","customers","staleTime","QR_CACHE","_jsxs","_Fragment","children","_jsx","TitlePage","title","className","total","Filter","ExportFile","qr","map","item","Avatar","src","avatar","fullname","alt","email","href","telephone","FlatFormOrder","platForm","platform","formatDate","created_at","Link","to","KTSVG","path","id","PageCircularProgress","loading","XPagination","totalPage","last_page","onChangePage","page","newQuery","pathname","defaultPage","_ref","_query$platform","_query$sort","sorts","sort","rangeDate","setRangeDate","useState","form","placeholder","FormControl","sx","m","minWidth","size","Select","labelId","value","onChange","e","target","pickBy","identity","MenuItem","PLAT_FORM_ARR","XDateRangePicker","showBot","init","startDate","Date","endDate","label","moment","selection","format","onApply","onApplyRangeDate","onCancel","onCancelRangeDate","undefined","_ref2","setCustomers","resultLoad","noti","onCloseNoti","useMessage","isExport","setIsExport","mutate","useMutation","mutationFn","onSuccess","res","prev","useEffect","length","onExportFile","then","message","color","AppSnack","severity","open","openAlert","close","LoadingButton","variant","onClick","onExport","getRangeOfDates","i","type","style","marginRight","Promise","resolve","reject","dataWithTitles","ws","XLSX","aoa_to_sheet","wch","wb","Sheets","SheetNames","excelBuffer","bookType","Blob","FileSaver","props","element"],"sourceRoot":""}